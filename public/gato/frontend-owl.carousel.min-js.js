(self["webpackChunkbingo"] = self["webpackChunkbingo"] || []).push([["frontend-owl.carousel.min-js"],{

/***/ "./assets/frontend/js/owl.carousel.min.js":
/*!************************************************!*\
  !*** ./assets/frontend/js/owl.carousel.min.js ***!
  \************************************************/
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

/* provided dependency */ var jQuery = __webpack_require__(/*! jquery */ "./node_modules/jquery/dist/jquery.js");
/* provided dependency */ var __webpack_provided_window_dot_jQuery = __webpack_require__(/*! jquery */ "./node_modules/jquery/dist/jquery.js");
__webpack_require__(/*! core-js/modules/es.array.slice.js */ "./node_modules/core-js/modules/es.array.slice.js");

__webpack_require__(/*! core-js/modules/es.array.filter.js */ "./node_modules/core-js/modules/es.array.filter.js");

__webpack_require__(/*! core-js/modules/es.number.to-fixed.js */ "./node_modules/core-js/modules/es.number.to-fixed.js");

__webpack_require__(/*! core-js/modules/es.array.join.js */ "./node_modules/core-js/modules/es.array.join.js");

__webpack_require__(/*! core-js/modules/es.array.find.js */ "./node_modules/core-js/modules/es.array.find.js");

__webpack_require__(/*! core-js/modules/es.regexp.exec.js */ "./node_modules/core-js/modules/es.regexp.exec.js");

__webpack_require__(/*! core-js/modules/es.string.replace.js */ "./node_modules/core-js/modules/es.string.replace.js");

__webpack_require__(/*! core-js/modules/es.number.constructor.js */ "./node_modules/core-js/modules/es.number.constructor.js");

__webpack_require__(/*! core-js/modules/es.date.to-string.js */ "./node_modules/core-js/modules/es.date.to-string.js");

__webpack_require__(/*! core-js/modules/es.string.split.js */ "./node_modules/core-js/modules/es.string.split.js");

__webpack_require__(/*! core-js/modules/es.array.map.js */ "./node_modules/core-js/modules/es.array.map.js");

__webpack_require__(/*! core-js/modules/es.array.splice.js */ "./node_modules/core-js/modules/es.array.splice.js");

__webpack_require__(/*! core-js/modules/es.function.name.js */ "./node_modules/core-js/modules/es.function.name.js");

__webpack_require__(/*! core-js/modules/es.object.get-own-property-names.js */ "./node_modules/core-js/modules/es.object.get-own-property-names.js");

__webpack_require__(/*! core-js/modules/es.string.match.js */ "./node_modules/core-js/modules/es.string.match.js");

__webpack_require__(/*! core-js/modules/es.array.index-of.js */ "./node_modules/core-js/modules/es.array.index-of.js");

/**
 * Owl carousel
 * @version 2.2.0
 * @author Bartosz Wojciechowski
 * @license The MIT License (MIT)
 * @todo Lazy Load Icon
 * @todo prevent animationend bubling
 * @todo itemsScaleUp
 * @todo Test Zepto
 * @todo stagePadding calculate wrong active classes
 */
!function (t, e, i, s) {
  function n(e, i) {
    this.settings = null, this.options = t.extend({}, n.Defaults, i), this.$element = t(e), this.drag = t.extend({}, p), this.state = t.extend({}, u), this.e = t.extend({}, g), this._plugins = {}, this._supress = {}, this._current = null, this._speed = null, this._coordinates = [], this._breakpoint = null, this._width = null, this._items = [], this._clones = [], this._mergers = [], this._invalidated = {}, this._pipe = [], t.each(n.Plugins, t.proxy(function (t, e) {
      this._plugins[t[0].toLowerCase() + t.slice(1)] = new e(this);
    }, this)), t.each(n.Pipe, t.proxy(function (e, i) {
      this._pipe.push({
        filter: i.filter,
        run: t.proxy(i.run, this)
      });
    }, this)), this.setup(), this.initialize();
  }

  function o(t) {
    if (t.touches !== s) return {
      x: t.touches[0].pageX,
      y: t.touches[0].pageY
    };

    if (t.touches === s) {
      if (t.pageX !== s) return {
        x: t.pageX,
        y: t.pageY
      };
      if (t.pageX === s) return {
        x: t.clientX,
        y: t.clientY
      };
    }
  }

  function r(t) {
    var e,
        s,
        n = i.createElement("div"),
        o = t;

    for (e in o) {
      if (s = o[e], "undefined" != typeof n.style[s]) return n = null, [s, e];
    }

    return [!1];
  }

  function a() {
    return r(["transition", "WebkitTransition", "MozTransition", "OTransition"])[1];
  }

  function h() {
    return r(["transform", "WebkitTransform", "MozTransform", "OTransform", "msTransform"])[0];
  }

  function l() {
    return r(["perspective", "webkitPerspective", "MozPerspective", "OPerspective", "MsPerspective"])[0];
  }

  function c() {
    return "ontouchstart" in e || !!navigator.msMaxTouchPoints;
  }

  function d() {
    return e.navigator.msPointerEnabled;
  }

  var p, u, g;
  p = {
    start: 0,
    startX: 0,
    startY: 0,
    current: 0,
    currentX: 0,
    currentY: 0,
    offsetX: 0,
    offsetY: 0,
    distance: null,
    startTime: 0,
    endTime: 0,
    updatedX: 0,
    targetEl: null
  }, u = {
    isTouch: !1,
    isScrolling: !1,
    isSwiping: !1,
    direction: !1,
    inMotion: !1
  }, g = {
    _onDragStart: null,
    _onDragMove: null,
    _onDragEnd: null,
    _transitionEnd: null,
    _resizer: null,
    _responsiveCall: null,
    _goToLoop: null,
    _checkVisibile: null
  }, n.Defaults = {
    items: 3,
    loop: !1,
    center: !1,
    mouseDrag: !0,
    touchDrag: !0,
    pullDrag: !0,
    freeDrag: !1,
    margin: 0,
    stagePadding: 0,
    merge: !1,
    mergeFit: !0,
    autoWidth: !1,
    startPosition: 0,
    rtl: !1,
    smartSpeed: 250,
    fluidSpeed: !1,
    dragEndSpeed: !1,
    responsive: {},
    responsiveRefreshRate: 200,
    responsiveBaseElement: e,
    responsiveClass: !1,
    fallbackEasing: "swing",
    info: !1,
    nestedItemSelector: !1,
    itemElement: "div",
    stageElement: "div",
    themeClass: "owl-theme",
    baseClass: "owl-carousel",
    itemClass: "owl-item",
    centerClass: "center",
    activeClass: "active"
  }, n.Width = {
    Default: "default",
    Inner: "inner",
    Outer: "outer"
  }, n.Plugins = {}, n.Pipe = [{
    filter: ["width", "items", "settings"],
    run: function run(t) {
      t.current = this._items && this._items[this.relative(this._current)];
    }
  }, {
    filter: ["items", "settings"],
    run: function run() {
      var t = this._clones,
          e = this.$stage.children(".cloned");
      (e.length !== t.length || !this.settings.loop && t.length > 0) && (this.$stage.children(".cloned").remove(), this._clones = []);
    }
  }, {
    filter: ["items", "settings"],
    run: function run() {
      var t,
          e,
          i = this._clones,
          s = this._items,
          n = this.settings.loop ? i.length - Math.max(2 * this.settings.items, 4) : 0;

      for (t = 0, e = Math.abs(n / 2); e > t; t++) {
        n > 0 ? (this.$stage.children().eq(s.length + i.length - 1).remove(), i.pop(), this.$stage.children().eq(0).remove(), i.pop()) : (i.push(i.length / 2), this.$stage.append(s[i[i.length - 1]].clone().addClass("cloned")), i.push(s.length - 1 - (i.length - 1) / 2), this.$stage.prepend(s[i[i.length - 1]].clone().addClass("cloned")));
      }
    }
  }, {
    filter: ["width", "items", "settings"],
    run: function run() {
      var t,
          e,
          i,
          s = this.settings.rtl ? 1 : -1,
          n = (this.width() / this.settings.items).toFixed(3),
          o = 0;

      for (this._coordinates = [], e = 0, i = this._clones.length + this._items.length; i > e; e++) {
        t = this._mergers[this.relative(e)], t = this.settings.mergeFit && Math.min(t, this.settings.items) || t, o += (this.settings.autoWidth ? this._items[this.relative(e)].width() + this.settings.margin : n * t) * s, this._coordinates.push(o);
      }
    }
  }, {
    filter: ["width", "items", "settings"],
    run: function run() {
      var e,
          i,
          s = (this.width() / this.settings.items).toFixed(3),
          n = {
        width: Math.abs(this._coordinates[this._coordinates.length - 1]) + 2 * this.settings.stagePadding,
        "padding-left": this.settings.stagePadding || "",
        "padding-right": this.settings.stagePadding || ""
      };
      if (this.$stage.css(n), n = {
        width: this.settings.autoWidth ? "auto" : s - this.settings.margin
      }, n[this.settings.rtl ? "margin-left" : "margin-right"] = this.settings.margin, !this.settings.autoWidth && t.grep(this._mergers, function (t) {
        return t > 1;
      }).length > 0) for (e = 0, i = this._coordinates.length; i > e; e++) {
        n.width = Math.abs(this._coordinates[e]) - Math.abs(this._coordinates[e - 1] || 0) - this.settings.margin, this.$stage.children().eq(e).css(n);
      } else this.$stage.children().css(n);
    }
  }, {
    filter: ["width", "items", "settings"],
    run: function run(t) {
      t.current && this.reset(this.$stage.children().index(t.current));
    }
  }, {
    filter: ["position"],
    run: function run() {
      this.animate(this.coordinates(this._current));
    }
  }, {
    filter: ["width", "position", "items", "settings"],
    run: function run() {
      var t,
          e,
          i,
          s,
          n = this.settings.rtl ? 1 : -1,
          o = 2 * this.settings.stagePadding,
          r = this.coordinates(this.current()) + o,
          a = r + this.width() * n,
          h = [];

      for (i = 0, s = this._coordinates.length; s > i; i++) {
        t = this._coordinates[i - 1] || 0, e = Math.abs(this._coordinates[i]) + o * n, (this.op(t, "<=", r) && this.op(t, ">", a) || this.op(e, "<", r) && this.op(e, ">", a)) && h.push(i);
      }

      this.$stage.children("." + this.settings.activeClass).removeClass(this.settings.activeClass), this.$stage.children(":eq(" + h.join("), :eq(") + ")").addClass(this.settings.activeClass), this.settings.center && (this.$stage.children("." + this.settings.centerClass).removeClass(this.settings.centerClass), this.$stage.children().eq(this.current()).addClass(this.settings.centerClass));
    }
  }], n.prototype.initialize = function () {
    if (this.trigger("initialize"), this.$element.addClass(this.settings.baseClass).addClass(this.settings.themeClass).toggleClass("owl-rtl", this.settings.rtl), this.browserSupport(), this.settings.autoWidth && this.state.imagesLoaded !== !0) {
      var e, i, n;
      if (e = this.$element.find("img"), i = this.settings.nestedItemSelector ? "." + this.settings.nestedItemSelector : s, n = this.$element.children(i).width(), e.length && 0 >= n) return this.preloadAutoWidthImages(e), !1;
    }

    this.$element.addClass("owl-loading"), this.$stage = t("<" + this.settings.stageElement + ' class="owl-stage"/>').wrap('<div class="owl-stage-outer">'), this.$element.append(this.$stage.parent()), this.replace(this.$element.children().not(this.$stage.parent())), this._width = this.$element.width(), this.refresh(), this.$element.removeClass("owl-loading").addClass("owl-loaded"), this.eventsCall(), this.internalEvents(), this.addTriggerableEvents(), this.trigger("initialized");
  }, n.prototype.setup = function () {
    var e = this.viewport(),
        i = this.options.responsive,
        s = -1,
        n = null;
    i ? (t.each(i, function (t) {
      e >= t && t > s && (s = Number(t));
    }), n = t.extend({}, this.options, i[s]), delete n.responsive, n.responsiveClass && this.$element.attr("class", function (t, e) {
      return e.replace(/\b owl-responsive-\S+/g, "");
    }).addClass("owl-responsive-" + s)) : n = t.extend({}, this.options), (null === this.settings || this._breakpoint !== s) && (this.trigger("change", {
      property: {
        name: "settings",
        value: n
      }
    }), this._breakpoint = s, this.settings = n, this.invalidate("settings"), this.trigger("changed", {
      property: {
        name: "settings",
        value: this.settings
      }
    }));
  }, n.prototype.optionsLogic = function () {
    this.$element.toggleClass("owl-center", this.settings.center), this.settings.loop && this._items.length < this.settings.items && (this.settings.loop = !1), this.settings.autoWidth && (this.settings.stagePadding = !1, this.settings.merge = !1);
  }, n.prototype.prepare = function (e) {
    var i = this.trigger("prepare", {
      content: e
    });
    return i.data || (i.data = t("<" + this.settings.itemElement + "/>").addClass(this.settings.itemClass).append(e)), this.trigger("prepared", {
      content: i.data
    }), i.data;
  }, n.prototype.update = function () {
    for (var e = 0, i = this._pipe.length, s = t.proxy(function (t) {
      return this[t];
    }, this._invalidated), n = {}; i > e;) {
      (this._invalidated.all || t.grep(this._pipe[e].filter, s).length > 0) && this._pipe[e].run(n), e++;
    }

    this._invalidated = {};
  }, n.prototype.width = function (t) {
    switch (t = t || n.Width.Default) {
      case n.Width.Inner:
      case n.Width.Outer:
        return this._width;

      default:
        return this._width - 2 * this.settings.stagePadding + this.settings.margin;
    }
  }, n.prototype.refresh = function () {
    if (0 === this._items.length) return !1;
    new Date().getTime();
    this.trigger("refresh"), this.setup(), this.optionsLogic(), this.$stage.addClass("owl-refresh"), this.update(), this.$stage.removeClass("owl-refresh"), this.state.orientation = e.orientation, this.watchVisibility(), this.trigger("refreshed");
  }, n.prototype.eventsCall = function () {
    this.e._onDragStart = t.proxy(function (t) {
      this.onDragStart(t);
    }, this), this.e._onDragMove = t.proxy(function (t) {
      this.onDragMove(t);
    }, this), this.e._onDragEnd = t.proxy(function (t) {
      this.onDragEnd(t);
    }, this), this.e._onResize = t.proxy(function (t) {
      this.onResize(t);
    }, this), this.e._transitionEnd = t.proxy(function (t) {
      this.transitionEnd(t);
    }, this), this.e._preventClick = t.proxy(function (t) {
      this.preventClick(t);
    }, this);
  }, n.prototype.onThrottledResize = function () {
    e.clearTimeout(this.resizeTimer), this.resizeTimer = e.setTimeout(this.e._onResize, this.settings.responsiveRefreshRate);
  }, n.prototype.onResize = function () {
    return this._items.length ? this._width === this.$element.width() ? !1 : this.trigger("resize").isDefaultPrevented() ? !1 : (this._width = this.$element.width(), this.invalidate("width"), this.refresh(), void this.trigger("resized")) : !1;
  }, n.prototype.eventsRouter = function (t) {
    var e = t.type;
    "mousedown" === e || "touchstart" === e ? this.onDragStart(t) : "mousemove" === e || "touchmove" === e ? this.onDragMove(t) : "mouseup" === e || "touchend" === e ? this.onDragEnd(t) : "touchcancel" === e && this.onDragEnd(t);
  }, n.prototype.internalEvents = function () {
    var i = (c(), d());
    this.settings.mouseDrag ? (this.$stage.on("mousedown", t.proxy(function (t) {
      this.eventsRouter(t);
    }, this)), this.$stage.on("dragstart", function () {
      return !1;
    }), this.$stage.get(0).onselectstart = function () {
      return !1;
    }) : this.$element.addClass("owl-text-select-on"), this.settings.touchDrag && !i && this.$stage.on("touchstart touchcancel", t.proxy(function (t) {
      this.eventsRouter(t);
    }, this)), this.transitionEndVendor && this.on(this.$stage.get(0), this.transitionEndVendor, this.e._transitionEnd, !1), this.settings.responsive !== !1 && this.on(e, "resize", t.proxy(this.onThrottledResize, this));
  }, n.prototype.onDragStart = function (s) {
    var n, r, a, h;
    if (n = s.originalEvent || s || e.event, 3 === n.which || this.state.isTouch) return !1;
    if ("mousedown" === n.type && this.$stage.addClass("owl-grab"), this.trigger("drag"), this.drag.startTime = new Date().getTime(), this.speed(0), this.state.isTouch = !0, this.state.isScrolling = !1, this.state.isSwiping = !1, this.drag.distance = 0, r = o(n).x, a = o(n).y, this.drag.offsetX = this.$stage.position().left, this.drag.offsetY = this.$stage.position().top, this.settings.rtl && (this.drag.offsetX = this.$stage.position().left + this.$stage.width() - this.width() + this.settings.margin), this.state.inMotion && this.support3d) h = this.getTransformProperty(), this.drag.offsetX = h, this.animate(h), this.state.inMotion = !0;else if (this.state.inMotion && !this.support3d) return this.state.inMotion = !1, !1;
    this.drag.startX = r - this.drag.offsetX, this.drag.startY = a - this.drag.offsetY, this.drag.start = r - this.drag.startX, this.drag.targetEl = n.target || n.srcElement, this.drag.updatedX = this.drag.start, ("IMG" === this.drag.targetEl.tagName || "A" === this.drag.targetEl.tagName) && (this.drag.targetEl.draggable = !1), t(i).on("mousemove.owl.dragEvents mouseup.owl.dragEvents touchmove.owl.dragEvents touchend.owl.dragEvents", t.proxy(function (t) {
      this.eventsRouter(t);
    }, this));
  }, n.prototype.onDragMove = function (t) {
    var i, n, r, a, h, l;
    this.state.isTouch && (this.state.isScrolling || (i = t.originalEvent || t || e.event, n = o(i).x, r = o(i).y, this.drag.currentX = n - this.drag.startX, this.drag.currentY = r - this.drag.startY, this.drag.distance = this.drag.currentX - this.drag.offsetX, this.drag.distance < 0 ? this.state.direction = this.settings.rtl ? "right" : "left" : this.drag.distance > 0 && (this.state.direction = this.settings.rtl ? "left" : "right"), this.settings.loop ? this.op(this.drag.currentX, ">", this.coordinates(this.minimum())) && "right" === this.state.direction ? this.drag.currentX -= (this.settings.center && this.coordinates(0)) - this.coordinates(this._items.length) : this.op(this.drag.currentX, "<", this.coordinates(this.maximum())) && "left" === this.state.direction && (this.drag.currentX += (this.settings.center && this.coordinates(0)) - this.coordinates(this._items.length)) : (a = this.settings.rtl ? this.coordinates(this.maximum()) : this.coordinates(this.minimum()), h = this.settings.rtl ? this.coordinates(this.minimum()) : this.coordinates(this.maximum()), l = this.settings.pullDrag ? this.drag.distance / 5 : 0, this.drag.currentX = Math.max(Math.min(this.drag.currentX, a + l), h + l)), (this.drag.distance > 8 || this.drag.distance < -8) && (i.preventDefault !== s ? i.preventDefault() : i.returnValue = !1, this.state.isSwiping = !0), this.drag.updatedX = this.drag.currentX, (this.drag.currentY > 16 || this.drag.currentY < -16) && this.state.isSwiping === !1 && (this.state.isScrolling = !0, this.drag.updatedX = this.drag.start), this.animate(this.drag.updatedX)));
  }, n.prototype.onDragEnd = function (e) {
    var s, n, o;

    if (this.state.isTouch) {
      if ("mouseup" === e.type && this.$stage.removeClass("owl-grab"), this.trigger("dragged"), this.drag.targetEl.removeAttribute("draggable"), this.state.isTouch = !1, this.state.isScrolling = !1, this.state.isSwiping = !1, 0 === this.drag.distance && this.state.inMotion !== !0) return this.state.inMotion = !1, !1;
      this.drag.endTime = new Date().getTime(), s = this.drag.endTime - this.drag.startTime, n = Math.abs(this.drag.distance), (n > 3 || s > 300) && this.removeClick(this.drag.targetEl), o = this.closest(this.drag.updatedX), this.speed(this.settings.dragEndSpeed || this.settings.smartSpeed), this.current(o), this.invalidate("position"), this.update(), this.settings.pullDrag || this.drag.updatedX !== this.coordinates(o) || this.transitionEnd(), this.drag.distance = 0, t(i).off(".owl.dragEvents");
    }
  }, n.prototype.removeClick = function (i) {
    this.drag.targetEl = i, t(i).on("click.preventClick", this.e._preventClick), e.setTimeout(function () {
      t(i).off("click.preventClick");
    }, 300);
  }, n.prototype.preventClick = function (e) {
    e.preventDefault ? e.preventDefault() : e.returnValue = !1, e.stopPropagation && e.stopPropagation(), t(e.target).off("click.preventClick");
  }, n.prototype.getTransformProperty = function () {
    var t, i;
    return t = e.getComputedStyle(this.$stage.get(0), null).getPropertyValue(this.vendorName + "transform"), t = t.replace(/matrix(3d)?\(|\)/g, "").split(","), i = 16 === t.length, i !== !0 ? t[4] : t[12];
  }, n.prototype.closest = function (e) {
    var i = -1,
        s = 30,
        n = this.width(),
        o = this.coordinates();
    return this.settings.freeDrag || t.each(o, t.proxy(function (t, r) {
      return e > r - s && r + s > e ? i = t : this.op(e, "<", r) && this.op(e, ">", o[t + 1] || r - n) && (i = "left" === this.state.direction ? t + 1 : t), -1 === i;
    }, this)), this.settings.loop || (this.op(e, ">", o[this.minimum()]) ? i = e = this.minimum() : this.op(e, "<", o[this.maximum()]) && (i = e = this.maximum())), i;
  }, n.prototype.animate = function (e) {
    this.trigger("translate"), this.state.inMotion = this.speed() > 0, this.support3d ? this.$stage.css({
      transform: "translate3d(" + e + "px,0px, 0px)",
      transition: this.speed() / 1e3 + "s"
    }) : this.state.isTouch ? this.$stage.css({
      left: e + "px"
    }) : this.$stage.animate({
      left: e
    }, this.speed() / 1e3, this.settings.fallbackEasing, t.proxy(function () {
      this.state.inMotion && this.transitionEnd();
    }, this));
  }, n.prototype.current = function (t) {
    if (t === s) return this._current;
    if (0 === this._items.length) return s;

    if (t = this.normalize(t), this._current !== t) {
      var e = this.trigger("change", {
        property: {
          name: "position",
          value: t
        }
      });
      e.data !== s && (t = this.normalize(e.data)), this._current = t, this.invalidate("position"), this.trigger("changed", {
        property: {
          name: "position",
          value: this._current
        }
      });
    }

    return this._current;
  }, n.prototype.invalidate = function (t) {
    this._invalidated[t] = !0;
  }, n.prototype.reset = function (t) {
    t = this.normalize(t), t !== s && (this._speed = 0, this._current = t, this.suppress(["translate", "translated"]), this.animate(this.coordinates(t)), this.release(["translate", "translated"]));
  }, n.prototype.normalize = function (e, i) {
    var n = i ? this._items.length : this._items.length + this._clones.length;
    return !t.isNumeric(e) || 1 > n ? s : e = this._clones.length ? (e % n + n) % n : Math.max(this.minimum(i), Math.min(this.maximum(i), e));
  }, n.prototype.relative = function (t) {
    return t = this.normalize(t), t -= this._clones.length / 2, this.normalize(t, !0);
  }, n.prototype.maximum = function (t) {
    var e,
        i,
        s,
        n = 0,
        o = this.settings;
    if (t) return this._items.length - 1;
    if (!o.loop && o.center) e = this._items.length - 1;else if (o.loop || o.center) {
      if (o.loop || o.center) e = this._items.length + o.items;else {
        if (!o.autoWidth && !o.merge) throw "Can not detect maximum absolute position.";

        for (revert = o.rtl ? 1 : -1, i = this.$stage.width() - this.$element.width(); (s = this.coordinates(n)) && !(s * revert >= i);) {
          e = ++n;
        }
      }
    } else e = this._items.length - o.items;
    return e;
  }, n.prototype.minimum = function (t) {
    return t ? 0 : this._clones.length / 2;
  }, n.prototype.items = function (t) {
    return t === s ? this._items.slice() : (t = this.normalize(t, !0), this._items[t]);
  }, n.prototype.mergers = function (t) {
    return t === s ? this._mergers.slice() : (t = this.normalize(t, !0), this._mergers[t]);
  }, n.prototype.clones = function (e) {
    var i = this._clones.length / 2,
        n = i + this._items.length,
        o = function o(t) {
      return t % 2 === 0 ? n + t / 2 : i - (t + 1) / 2;
    };

    return e === s ? t.map(this._clones, function (t, e) {
      return o(e);
    }) : t.map(this._clones, function (t, i) {
      return t === e ? o(i) : null;
    });
  }, n.prototype.speed = function (t) {
    return t !== s && (this._speed = t), this._speed;
  }, n.prototype.coordinates = function (e) {
    var i = null;
    return e === s ? t.map(this._coordinates, t.proxy(function (t, e) {
      return this.coordinates(e);
    }, this)) : (this.settings.center ? (i = this._coordinates[e], i += (this.width() - i + (this._coordinates[e - 1] || 0)) / 2 * (this.settings.rtl ? -1 : 1)) : i = this._coordinates[e - 1] || 0, i);
  }, n.prototype.duration = function (t, e, i) {
    return Math.min(Math.max(Math.abs(e - t), 1), 6) * Math.abs(i || this.settings.smartSpeed);
  }, n.prototype.to = function (i, s) {
    if (this.settings.loop) {
      var n = i - this.relative(this.current()),
          o = this.current(),
          r = this.current(),
          a = this.current() + n,
          h = 0 > r - a ? !0 : !1,
          l = this._clones.length + this._items.length;
      a < this.settings.items && h === !1 ? (o = r + this._items.length, this.reset(o)) : a >= l - this.settings.items && h === !0 && (o = r - this._items.length, this.reset(o)), e.clearTimeout(this.e._goToLoop), this.e._goToLoop = e.setTimeout(t.proxy(function () {
        this.speed(this.duration(this.current(), o + n, s)), this.current(o + n), this.update();
      }, this), 30);
    } else this.speed(this.duration(this.current(), i, s)), this.current(i), this.update();
  }, n.prototype.next = function (t) {
    t = t || !1, this.to(this.relative(this.current()) + 1, t);
  }, n.prototype.prev = function (t) {
    t = t || !1, this.to(this.relative(this.current()) - 1, t);
  }, n.prototype.transitionEnd = function (t) {
    return t !== s && (t.stopPropagation(), (t.target || t.srcElement || t.originalTarget) !== this.$stage.get(0)) ? !1 : (this.state.inMotion = !1, void this.trigger("translated"));
  }, n.prototype.viewport = function () {
    var s;
    if (this.options.responsiveBaseElement !== e) s = t(this.options.responsiveBaseElement).width();else if (e.innerWidth) s = e.innerWidth;else {
      if (!i.documentElement || !i.documentElement.clientWidth) throw "Can not detect viewport width.";
      s = i.documentElement.clientWidth;
    }
    return s;
  }, n.prototype.replace = function (e) {
    this.$stage.empty(), this._items = [], e && (e = e instanceof jQuery ? e : t(e)), this.settings.nestedItemSelector && (e = e.find("." + this.settings.nestedItemSelector)), e.filter(function () {
      return 1 === this.nodeType;
    }).each(t.proxy(function (t, e) {
      e = this.prepare(e), this.$stage.append(e), this._items.push(e), this._mergers.push(1 * e.find("[data-merge]").andSelf("[data-merge]").attr("data-merge") || 1);
    }, this)), this.reset(t.isNumeric(this.settings.startPosition) ? this.settings.startPosition : 0), this.invalidate("items");
  }, n.prototype.add = function (t, e) {
    e = e === s ? this._items.length : this.normalize(e, !0), this.trigger("add", {
      content: t,
      position: e
    }), 0 === this._items.length || e === this._items.length ? (this.$stage.append(t), this._items.push(t), this._mergers.push(1 * t.find("[data-merge]").andSelf("[data-merge]").attr("data-merge") || 1)) : (this._items[e].before(t), this._items.splice(e, 0, t), this._mergers.splice(e, 0, 1 * t.find("[data-merge]").andSelf("[data-merge]").attr("data-merge") || 1)), this.invalidate("items"), this.trigger("added", {
      content: t,
      position: e
    });
  }, n.prototype.remove = function (t) {
    t = this.normalize(t, !0), t !== s && (this.trigger("remove", {
      content: this._items[t],
      position: t
    }), this._items[t].remove(), this._items.splice(t, 1), this._mergers.splice(t, 1), this.invalidate("items"), this.trigger("removed", {
      content: null,
      position: t
    }));
  }, n.prototype.addTriggerableEvents = function () {
    var e = t.proxy(function (e, i) {
      return t.proxy(function (t) {
        t.relatedTarget !== this && (this.suppress([i]), e.apply(this, [].slice.call(arguments, 1)), this.release([i]));
      }, this);
    }, this);
    t.each({
      next: this.next,
      prev: this.prev,
      to: this.to,
      destroy: this.destroy,
      refresh: this.refresh,
      replace: this.replace,
      add: this.add,
      remove: this.remove
    }, t.proxy(function (t, i) {
      this.$element.on(t + ".owl.carousel", e(i, t + ".owl.carousel"));
    }, this));
  }, n.prototype.watchVisibility = function () {
    function i(t) {
      return t.offsetWidth > 0 && t.offsetHeight > 0;
    }

    function s() {
      i(this.$element.get(0)) && (this.$element.removeClass("owl-hidden"), this.refresh(), e.clearInterval(this.e._checkVisibile));
    }

    i(this.$element.get(0)) || (this.$element.addClass("owl-hidden"), e.clearInterval(this.e._checkVisibile), this.e._checkVisibile = e.setInterval(t.proxy(s, this), 500));
  }, n.prototype.preloadAutoWidthImages = function (e) {
    var i, s, n, o;
    i = 0, s = this, e.each(function (r, a) {
      n = t(a), o = new Image(), o.onload = function () {
        i++, n.attr("src", o.src), n.css("opacity", 1), i >= e.length && (s.state.imagesLoaded = !0, s.initialize());
      }, o.src = n.attr("src") || n.attr("data-src") || n.attr("data-src-retina");
    });
  }, n.prototype.destroy = function () {
    this.$element.hasClass(this.settings.themeClass) && this.$element.removeClass(this.settings.themeClass), this.settings.responsive !== !1 && t(e).off("resize.owl.carousel"), this.transitionEndVendor && this.off(this.$stage.get(0), this.transitionEndVendor, this.e._transitionEnd);

    for (var s in this._plugins) {
      this._plugins[s].destroy();
    }

    (this.settings.mouseDrag || this.settings.touchDrag) && (this.$stage.off("mousedown touchstart touchcancel"), t(i).off(".owl.dragEvents"), this.$stage.get(0).onselectstart = function () {}, this.$stage.off("dragstart", function () {
      return !1;
    })), this.$element.off(".owl"), this.$stage.children(".cloned").remove(), this.e = null, this.$element.removeData("owlCarousel"), this.$stage.children().contents().unwrap(), this.$stage.children().unwrap(), this.$stage.unwrap();
  }, n.prototype.op = function (t, e, i) {
    var s = this.settings.rtl;

    switch (e) {
      case "<":
        return s ? t > i : i > t;

      case ">":
        return s ? i > t : t > i;

      case ">=":
        return s ? i >= t : t >= i;

      case "<=":
        return s ? t >= i : i >= t;
    }
  }, n.prototype.on = function (t, e, i, s) {
    t.addEventListener ? t.addEventListener(e, i, s) : t.attachEvent && t.attachEvent("on" + e, i);
  }, n.prototype.off = function (t, e, i, s) {
    t.removeEventListener ? t.removeEventListener(e, i, s) : t.detachEvent && t.detachEvent("on" + e, i);
  }, n.prototype.trigger = function (e, i, s) {
    var n = {
      item: {
        count: this._items.length,
        index: this.current()
      }
    },
        o = t.camelCase(t.grep(["on", e, s], function (t) {
      return t;
    }).join("-").toLowerCase()),
        r = t.Event([e, "owl", s || "carousel"].join(".").toLowerCase(), t.extend({
      relatedTarget: this
    }, n, i));
    return this._supress[e] || (t.each(this._plugins, function (t, e) {
      e.onTrigger && e.onTrigger(r);
    }), this.$element.trigger(r), this.settings && "function" == typeof this.settings[o] && this.settings[o].apply(this, r)), r;
  }, n.prototype.suppress = function (e) {
    t.each(e, t.proxy(function (t, e) {
      this._supress[e] = !0;
    }, this));
  }, n.prototype.release = function (e) {
    t.each(e, t.proxy(function (t, e) {
      delete this._supress[e];
    }, this));
  }, n.prototype.browserSupport = function () {
    if (this.support3d = l(), this.support3d) {
      this.transformVendor = h();
      var t = ["transitionend", "webkitTransitionEnd", "transitionend", "oTransitionEnd"];
      this.transitionEndVendor = t[a()], this.vendorName = this.transformVendor.replace(/Transform/i, ""), this.vendorName = "" !== this.vendorName ? "-" + this.vendorName.toLowerCase() + "-" : "";
    }

    this.state.orientation = e.orientation;
  }, t.fn.owlCarousel = function (e) {
    return this.each(function () {
      t(this).data("owlCarousel") || t(this).data("owlCarousel", new n(this, e));
    });
  }, t.fn.owlCarousel.Constructor = n;
}(window.Zepto || __webpack_provided_window_dot_jQuery, window, document), function (t, e, i, s) {
  var n = function n(e) {
    this._core = e, this._loaded = [], this._handlers = {
      "initialized.owl.carousel change.owl.carousel": t.proxy(function (e) {
        if (e.namespace && this._core.settings && this._core.settings.lazyLoad && (e.property && "position" == e.property.name || "initialized" == e.type)) for (var i = this._core.settings, s = i.center && Math.ceil(i.items / 2) || i.items, n = i.center && -1 * s || 0, o = (e.property && e.property.value || this._core.current()) + n, r = this._core.clones().length, a = t.proxy(function (t, e) {
          this.load(e);
        }, this); n++ < s;) {
          this.load(r / 2 + this._core.relative(o)), r && t.each(this._core.clones(this._core.relative(o++)), a);
        }
      }, this)
    }, this._core.options = t.extend({}, n.Defaults, this._core.options), this._core.$element.on(this._handlers);
  };

  n.Defaults = {
    lazyLoad: !1
  }, n.prototype.load = function (i) {
    var s = this._core.$stage.children().eq(i),
        n = s && s.find(".owl-lazy");

    !n || t.inArray(s.get(0), this._loaded) > -1 || (n.each(t.proxy(function (i, s) {
      var n,
          o = t(s),
          r = e.devicePixelRatio > 1 && o.attr("data-src-retina") || o.attr("data-src");
      this._core.trigger("load", {
        element: o,
        url: r
      }, "lazy"), o.is("img") ? o.one("load.owl.lazy", t.proxy(function () {
        o.css("opacity", 1), this._core.trigger("loaded", {
          element: o,
          url: r
        }, "lazy");
      }, this)).attr("src", r) : (n = new Image(), n.onload = t.proxy(function () {
        o.css({
          "background-image": "url(" + r + ")",
          opacity: "1"
        }), this._core.trigger("loaded", {
          element: o,
          url: r
        }, "lazy");
      }, this), n.src = r);
    }, this)), this._loaded.push(s.get(0)));
  }, n.prototype.destroy = function () {
    var t, e;

    for (t in this.handlers) {
      this._core.$element.off(t, this.handlers[t]);
    }

    for (e in Object.getOwnPropertyNames(this)) {
      "function" != typeof this[e] && (this[e] = null);
    }
  }, t.fn.owlCarousel.Constructor.Plugins.Lazy = n;
}(window.Zepto || __webpack_provided_window_dot_jQuery, window, document), function (t, e, i, s) {
  var n = function n(e) {
    this._core = e, this._handlers = {
      "initialized.owl.carousel": t.proxy(function () {
        this._core.settings.autoHeight && this.update();
      }, this),
      "changed.owl.carousel": t.proxy(function (t) {
        this._core.settings.autoHeight && "position" == t.property.name && this.update();
      }, this),
      "loaded.owl.lazy": t.proxy(function (t) {
        this._core.settings.autoHeight && t.element.closest("." + this._core.settings.itemClass) === this._core.$stage.children().eq(this._core.current()) && this.update();
      }, this)
    }, this._core.options = t.extend({}, n.Defaults, this._core.options), this._core.$element.on(this._handlers);
  };

  n.Defaults = {
    autoHeight: !1,
    autoHeightClass: "owl-height"
  }, n.prototype.update = function () {
    this._core.$stage.parent().height(this._core.$stage.children().eq(this._core.current()).height()).addClass(this._core.settings.autoHeightClass);
  }, n.prototype.destroy = function () {
    var t, e;

    for (t in this._handlers) {
      this._core.$element.off(t, this._handlers[t]);
    }

    for (e in Object.getOwnPropertyNames(this)) {
      "function" != typeof this[e] && (this[e] = null);
    }
  }, t.fn.owlCarousel.Constructor.Plugins.AutoHeight = n;
}(window.Zepto || __webpack_provided_window_dot_jQuery, window, document), function (t, e, i, s) {
  var n = function n(e) {
    this._core = e, this._videos = {}, this._playing = null, this._fullscreen = !1, this._handlers = {
      "resize.owl.carousel": t.proxy(function (t) {
        this._core.settings.video && !this.isInFullScreen() && t.preventDefault();
      }, this),
      "refresh.owl.carousel changed.owl.carousel": t.proxy(function (t) {
        this._playing && this.stop();
      }, this),
      "prepared.owl.carousel": t.proxy(function (e) {
        var i = t(e.content).find(".owl-video");
        i.length && (i.css("display", "none"), this.fetch(i, t(e.content)));
      }, this)
    }, this._core.options = t.extend({}, n.Defaults, this._core.options), this._core.$element.on(this._handlers), this._core.$element.on("click.owl.video", ".owl-video-play-icon", t.proxy(function (t) {
      this.play(t);
    }, this));
  };

  n.Defaults = {
    video: !1,
    videoHeight: !1,
    videoWidth: !1
  }, n.prototype.fetch = function (t, e) {
    var i = t.attr("data-vimeo-id") ? "vimeo" : "youtube",
        s = t.attr("data-vimeo-id") || t.attr("data-youtube-id"),
        n = t.attr("data-width") || this._core.settings.videoWidth,
        o = t.attr("data-height") || this._core.settings.videoHeight,
        r = t.attr("href");

    if (!r) throw new Error("Missing video URL.");
    if (s = r.match(/(http:|https:|)\/\/(player.|www.)?(vimeo\.com|youtu(be\.com|\.be|be\.googleapis\.com))\/(video\/|embed\/|watch\?v=|v\/)?([A-Za-z0-9._%-]*)(\&\S+)?/), s[3].indexOf("youtu") > -1) i = "youtube";else {
      if (!(s[3].indexOf("vimeo") > -1)) throw new Error("Video URL not supported.");
      i = "vimeo";
    }
    s = s[6], this._videos[r] = {
      type: i,
      id: s,
      width: n,
      height: o
    }, e.attr("data-video", r), this.thumbnail(t, this._videos[r]);
  }, n.prototype.thumbnail = function (e, i) {
    var s,
        n,
        o,
        r = i.width && i.height ? 'style="width:' + i.width + "px;height:" + i.height + 'px;"' : "",
        a = e.find("img"),
        h = "src",
        l = "",
        c = this._core.settings,
        d = function d(t) {
      n = '<div class="owl-video-play-icon"></div>', s = c.lazyLoad ? '<div class="owl-video-tn ' + l + '" ' + h + '="' + t + '"></div>' : '<div class="owl-video-tn" style="opacity:1;background-image:url(' + t + ')"></div>', e.after(s), e.after(n);
    };

    return e.wrap('<div class="owl-video-wrapper"' + r + "></div>"), this._core.settings.lazyLoad && (h = "data-src", l = "owl-lazy"), a.length ? (d(a.attr(h)), a.remove(), !1) : void ("youtube" === i.type ? (o = "http://img.youtube.com/vi/" + i.id + "/hqdefault.jpg", d(o)) : "vimeo" === i.type && t.ajax({
      type: "GET",
      url: "http://vimeo.com/api/v2/video/" + i.id + ".json",
      jsonp: "callback",
      dataType: "jsonp",
      success: function success(t) {
        o = t[0].thumbnail_large, d(o);
      }
    }));
  }, n.prototype.stop = function () {
    this._core.trigger("stop", null, "video"), this._playing.find(".owl-video-frame").remove(), this._playing.removeClass("owl-video-playing"), this._playing = null;
  }, n.prototype.play = function (e) {
    this._core.trigger("play", null, "video"), this._playing && this.stop();

    var i,
        s,
        n = t(e.target || e.srcElement),
        o = n.closest("." + this._core.settings.itemClass),
        r = this._videos[o.attr("data-video")],
        a = r.width || "100%",
        h = r.height || this._core.$stage.height();

    "youtube" === r.type ? i = '<iframe width="' + a + '" height="' + h + '" src="http://www.youtube.com/embed/' + r.id + "?autoplay=1&v=" + r.id + '" frameborder="0" allowfullscreen></iframe>' : "vimeo" === r.type && (i = '<iframe src="http://player.vimeo.com/video/' + r.id + '?autoplay=1" width="' + a + '" height="' + h + '" frameborder="0" webkitallowfullscreen mozallowfullscreen allowfullscreen></iframe>'), o.addClass("owl-video-playing"), this._playing = o, s = t('<div style="height:' + h + "px; width:" + a + 'px" class="owl-video-frame">' + i + "</div>"), n.after(s);
  }, n.prototype.isInFullScreen = function () {
    var s = i.fullscreenElement || i.mozFullScreenElement || i.webkitFullscreenElement;
    return s && t(s).parent().hasClass("owl-video-frame") && (this._core.speed(0), this._fullscreen = !0), s && this._fullscreen && this._playing ? !1 : this._fullscreen ? (this._fullscreen = !1, !1) : this._playing && this._core.state.orientation !== e.orientation ? (this._core.state.orientation = e.orientation, !1) : !0;
  }, n.prototype.destroy = function () {
    var t, e;

    this._core.$element.off("click.owl.video");

    for (t in this._handlers) {
      this._core.$element.off(t, this._handlers[t]);
    }

    for (e in Object.getOwnPropertyNames(this)) {
      "function" != typeof this[e] && (this[e] = null);
    }
  }, t.fn.owlCarousel.Constructor.Plugins.Video = n;
}(window.Zepto || __webpack_provided_window_dot_jQuery, window, document), function (t, e, i, s) {
  var n = function n(e) {
    this.core = e, this.core.options = t.extend({}, n.Defaults, this.core.options), this.swapping = !0, this.previous = s, this.next = s, this.handlers = {
      "change.owl.carousel": t.proxy(function (t) {
        "position" == t.property.name && (this.previous = this.core.current(), this.next = t.property.value);
      }, this),
      "drag.owl.carousel dragged.owl.carousel translated.owl.carousel": t.proxy(function (t) {
        this.swapping = "translated" == t.type;
      }, this),
      "translate.owl.carousel": t.proxy(function (t) {
        this.swapping && (this.core.options.animateOut || this.core.options.animateIn) && this.swap();
      }, this)
    }, this.core.$element.on(this.handlers);
  };

  n.Defaults = {
    animateOut: !1,
    animateIn: !1
  }, n.prototype.swap = function () {
    if (1 === this.core.settings.items && this.core.support3d) {
      this.core.speed(0);
      var e,
          i = t.proxy(this.clear, this),
          s = this.core.$stage.children().eq(this.previous),
          n = this.core.$stage.children().eq(this.next),
          o = this.core.settings.animateIn,
          r = this.core.settings.animateOut;
      this.core.current() !== this.previous && (r && (e = this.core.coordinates(this.previous) - this.core.coordinates(this.next), s.css({
        left: e + "px"
      }).addClass("animated owl-animated-out").addClass(r).one("webkitAnimationEnd mozAnimationEnd MSAnimationEnd oanimationend animationend", i)), o && n.addClass("animated owl-animated-in").addClass(o).one("webkitAnimationEnd mozAnimationEnd MSAnimationEnd oanimationend animationend", i));
    }
  }, n.prototype.clear = function (e) {
    t(e.target).css({
      left: ""
    }).removeClass("animated owl-animated-out owl-animated-in").removeClass(this.core.settings.animateIn).removeClass(this.core.settings.animateOut), this.core.transitionEnd();
  }, n.prototype.destroy = function () {
    var t, e;

    for (t in this.handlers) {
      this.core.$element.off(t, this.handlers[t]);
    }

    for (e in Object.getOwnPropertyNames(this)) {
      "function" != typeof this[e] && (this[e] = null);
    }
  }, t.fn.owlCarousel.Constructor.Plugins.Animate = n;
}(window.Zepto || __webpack_provided_window_dot_jQuery, window, document), function (t, e, i, s) {
  var n = function n(e) {
    this.core = e, this.core.options = t.extend({}, n.Defaults, this.core.options), this.handlers = {
      "translated.owl.carousel refreshed.owl.carousel": t.proxy(function () {
        this.autoplay();
      }, this),
      "play.owl.autoplay": t.proxy(function (t, e, i) {
        this.play(e, i);
      }, this),
      "stop.owl.autoplay": t.proxy(function () {
        this.stop();
      }, this),
      "mouseover.owl.autoplay": t.proxy(function () {
        this.core.settings.autoplayHoverPause && this.pause();
      }, this),
      "mouseleave.owl.autoplay": t.proxy(function () {
        this.core.settings.autoplayHoverPause && this.autoplay();
      }, this)
    }, this.core.$element.on(this.handlers);
  };

  n.Defaults = {
    autoplay: !1,
    autoplayTimeout: 5e3,
    autoplayHoverPause: !1,
    autoplaySpeed: !1
  }, n.prototype.autoplay = function () {
    this.core.settings.autoplay && !this.core.state.videoPlay ? (e.clearInterval(this.interval), this.interval = e.setInterval(t.proxy(function () {
      this.play();
    }, this), this.core.settings.autoplayTimeout)) : e.clearInterval(this.interval);
  }, n.prototype.play = function (t, s) {
    return i.hidden === !0 || this.core.state.isTouch || this.core.state.isScrolling || this.core.state.isSwiping || this.core.state.inMotion ? void 0 : this.core.settings.autoplay === !1 ? void e.clearInterval(this.interval) : void this.core.next(this.core.settings.autoplaySpeed);
  }, n.prototype.stop = function () {
    e.clearInterval(this.interval);
  }, n.prototype.pause = function () {
    e.clearInterval(this.interval);
  }, n.prototype.destroy = function () {
    var t, i;
    e.clearInterval(this.interval);

    for (t in this.handlers) {
      this.core.$element.off(t, this.handlers[t]);
    }

    for (i in Object.getOwnPropertyNames(this)) {
      "function" != typeof this[i] && (this[i] = null);
    }
  }, t.fn.owlCarousel.Constructor.Plugins.autoplay = n;
}(window.Zepto || __webpack_provided_window_dot_jQuery, window, document), function (t, e, i, s) {
  "use strict";

  var n = function n(e) {
    this._core = e, this._initialized = !1, this._pages = [], this._controls = {}, this._templates = [], this.$element = this._core.$element, this._overrides = {
      next: this._core.next,
      prev: this._core.prev,
      to: this._core.to
    }, this._handlers = {
      "prepared.owl.carousel": t.proxy(function (e) {
        this._core.settings.dotsData && this._templates.push(t(e.content).find("[data-dot]").andSelf("[data-dot]").attr("data-dot"));
      }, this),
      "add.owl.carousel": t.proxy(function (e) {
        this._core.settings.dotsData && this._templates.splice(e.position, 0, t(e.content).find("[data-dot]").andSelf("[data-dot]").attr("data-dot"));
      }, this),
      "remove.owl.carousel prepared.owl.carousel": t.proxy(function (t) {
        this._core.settings.dotsData && this._templates.splice(t.position, 1);
      }, this),
      "change.owl.carousel": t.proxy(function (t) {
        if ("position" == t.property.name && !this._core.state.revert && !this._core.settings.loop && this._core.settings.navRewind) {
          var e = this._core.current(),
              i = this._core.maximum(),
              s = this._core.minimum();

          t.data = t.property.value > i ? e >= i ? s : i : t.property.value < s ? i : t.property.value;
        }
      }, this),
      "changed.owl.carousel": t.proxy(function (t) {
        "position" == t.property.name && this.draw();
      }, this),
      "refreshed.owl.carousel": t.proxy(function () {
        this._initialized || (this.initialize(), this._initialized = !0), this._core.trigger("refresh", null, "navigation"), this.update(), this.draw(), this._core.trigger("refreshed", null, "navigation");
      }, this)
    }, this._core.options = t.extend({}, n.Defaults, this._core.options), this.$element.on(this._handlers);
  };

  n.Defaults = {
    nav: !1,
    navRewind: !0,
    navText: ["<span></span>", "<span></span>"],
    navSpeed: !1,
    navElement: "div",
    navContainer: !1,
    navContainerClass: "owl-nav",
    navClass: ["owl-prev", "owl-next"],
    slideBy: 1,
    dotClass: "owl-dot",
    dotsClass: "owl-dots",
    dots: !0,
    dotsEach: !1,
    dotData: !1,
    dotsSpeed: !1,
    dotsContainer: !1,
    controlsClass: "owl-controls"
  }, n.prototype.initialize = function () {
    var e,
        i,
        s = this._core.settings;
    s.dotsData || (this._templates = [t("<div>").addClass(s.dotClass).append(t("<span>")).prop("outerHTML")]), s.navContainer && s.dotsContainer || (this._controls.$container = t("<div>").addClass(s.controlsClass).appendTo(this.$element)), this._controls.$indicators = s.dotsContainer ? t(s.dotsContainer) : t("<div>").hide().addClass(s.dotsClass).appendTo(this._controls.$container), this._controls.$indicators.on("click", "div", t.proxy(function (e) {
      var i = t(e.target).parent().is(this._controls.$indicators) ? t(e.target).index() : t(e.target).parent().index();
      e.preventDefault(), this.to(i, s.dotsSpeed);
    }, this)), e = s.navContainer ? t(s.navContainer) : t("<div>").addClass(s.navContainerClass).prependTo(this._controls.$container), this._controls.$next = t("<" + s.navElement + ">"), this._controls.$previous = this._controls.$next.clone(), this._controls.$previous.addClass(s.navClass[0]).html(s.navText[0]).hide().prependTo(e).on("click", t.proxy(function (t) {
      this.prev(s.navSpeed);
    }, this)), this._controls.$next.addClass(s.navClass[1]).html(s.navText[1]).hide().appendTo(e).on("click", t.proxy(function (t) {
      this.next(s.navSpeed);
    }, this));

    for (i in this._overrides) {
      this._core[i] = t.proxy(this[i], this);
    }
  }, n.prototype.destroy = function () {
    var t, e, i, s;

    for (t in this._handlers) {
      this.$element.off(t, this._handlers[t]);
    }

    for (e in this._controls) {
      this._controls[e].remove();
    }

    for (s in this.overides) {
      this._core[s] = this._overrides[s];
    }

    for (i in Object.getOwnPropertyNames(this)) {
      "function" != typeof this[i] && (this[i] = null);
    }
  }, n.prototype.update = function () {
    var t,
        e,
        i,
        s = this._core.settings,
        n = this._core.clones().length / 2,
        o = n + this._core.items().length,
        r = s.center || s.autoWidth || s.dotData ? 1 : s.dotsEach || s.items;

    if ("page" !== s.slideBy && (s.slideBy = Math.min(s.slideBy, s.items)), s.dots || "page" == s.slideBy) for (this._pages = [], t = n, e = 0, i = 0; o > t; t++) {
      (e >= r || 0 === e) && (this._pages.push({
        start: t - n,
        end: t - n + r - 1
      }), e = 0, ++i), e += this._core.mergers(this._core.relative(t));
    }
  }, n.prototype.draw = function () {
    var e,
        i,
        s = "",
        n = this._core.settings,
        o = (this._core.$stage.children(), this._core.relative(this._core.current()));

    if (!n.nav || n.loop || n.navRewind || (this._controls.$previous.toggleClass("disabled", 0 >= o), this._controls.$next.toggleClass("disabled", o >= this._core.maximum())), this._controls.$previous.toggle(n.nav), this._controls.$next.toggle(n.nav), n.dots) {
      if (e = this._pages.length - this._controls.$indicators.children().length, n.dotData && 0 !== e) {
        for (i = 0; i < this._controls.$indicators.children().length; i++) {
          s += this._templates[this._core.relative(i)];
        }

        this._controls.$indicators.html(s);
      } else e > 0 ? (s = new Array(e + 1).join(this._templates[0]), this._controls.$indicators.append(s)) : 0 > e && this._controls.$indicators.children().slice(e).remove();

      this._controls.$indicators.find(".active").removeClass("active"), this._controls.$indicators.children().eq(t.inArray(this.current(), this._pages)).addClass("active");
    }

    this._controls.$indicators.toggle(n.dots);
  }, n.prototype.onTrigger = function (e) {
    var i = this._core.settings;
    e.page = {
      index: t.inArray(this.current(), this._pages),
      count: this._pages.length,
      size: i && (i.center || i.autoWidth || i.dotData ? 1 : i.dotsEach || i.items)
    };
  }, n.prototype.current = function () {
    var e = this._core.relative(this._core.current());

    return t.grep(this._pages, function (t) {
      return t.start <= e && t.end >= e;
    }).pop();
  }, n.prototype.getPosition = function (e) {
    var i,
        s,
        n = this._core.settings;
    return "page" == n.slideBy ? (i = t.inArray(this.current(), this._pages), s = this._pages.length, e ? ++i : --i, i = this._pages[(i % s + s) % s].start) : (i = this._core.relative(this._core.current()), s = this._core.items().length, e ? i += n.slideBy : i -= n.slideBy), i;
  }, n.prototype.next = function (e) {
    t.proxy(this._overrides.to, this._core)(this.getPosition(!0), e);
  }, n.prototype.prev = function (e) {
    t.proxy(this._overrides.to, this._core)(this.getPosition(!1), e);
  }, n.prototype.to = function (e, i, s) {
    var n;
    s ? t.proxy(this._overrides.to, this._core)(e, i) : (n = this._pages.length, t.proxy(this._overrides.to, this._core)(this._pages[(e % n + n) % n].start, i));
  }, t.fn.owlCarousel.Constructor.Plugins.Navigation = n;
}(window.Zepto || __webpack_provided_window_dot_jQuery, window, document), function (t, e, i, s) {
  "use strict";

  var n = function n(i) {
    this._core = i, this._hashes = {}, this.$element = this._core.$element, this._handlers = {
      "initialized.owl.carousel": t.proxy(function () {
        "URLHash" == this._core.settings.startPosition && t(e).trigger("hashchange.owl.navigation");
      }, this),
      "prepared.owl.carousel": t.proxy(function (e) {
        var i = t(e.content).find("[data-hash]").andSelf("[data-hash]").attr("data-hash");
        this._hashes[i] = e.content;
      }, this)
    }, this._core.options = t.extend({}, n.Defaults, this._core.options), this.$element.on(this._handlers), t(e).on("hashchange.owl.navigation", t.proxy(function () {
      var t = e.location.hash.substring(1),
          i = this._core.$stage.children(),
          s = this._hashes[t] && i.index(this._hashes[t]) || 0;

      return t ? void this._core.to(s, !1, !0) : !1;
    }, this));
  };

  n.Defaults = {
    URLhashListener: !1
  }, n.prototype.destroy = function () {
    var i, s;
    t(e).off("hashchange.owl.navigation");

    for (i in this._handlers) {
      this._core.$element.off(i, this._handlers[i]);
    }

    for (s in Object.getOwnPropertyNames(this)) {
      "function" != typeof this[s] && (this[s] = null);
    }
  }, t.fn.owlCarousel.Constructor.Plugins.Hash = n;
}(window.Zepto || __webpack_provided_window_dot_jQuery, window, document);

/***/ })

},
/******/ __webpack_require__ => { // webpackRuntimeModules
/******/ "use strict";
/******/ 
/******/ var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
/******/ __webpack_require__.O(0, ["vendors-node_modules_core-js_internals_export_js-node_modules_core-js_internals_well-known-sy-07cc72","vendors-node_modules_jquery_dist_jquery_js","vendors-node_modules_core-js_internals_advance-string-index_js-node_modules_core-js_internals-bed4a0","vendors-node_modules_core-js_internals_add-to-unscopables_js-node_modules_core-js_internals_a-31b1f3","vendors-node_modules_core-js_modules_es_array_filter_js-node_modules_core-js_modules_es_array-3c0a0d"], () => (__webpack_exec__("./assets/frontend/js/owl.carousel.min.js")));
/******/ var __webpack_exports__ = __webpack_require__.O();
/******/ }
]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9iaW5nby8uL2Fzc2V0cy9mcm9udGVuZC9qcy9vd2wuY2Fyb3VzZWwubWluLmpzIl0sIm5hbWVzIjpbInQiLCJlIiwiaSIsInMiLCJuIiwic2V0dGluZ3MiLCJvcHRpb25zIiwiZXh0ZW5kIiwiRGVmYXVsdHMiLCIkZWxlbWVudCIsImRyYWciLCJwIiwic3RhdGUiLCJ1IiwiZyIsIl9wbHVnaW5zIiwiX3N1cHJlc3MiLCJfY3VycmVudCIsIl9zcGVlZCIsIl9jb29yZGluYXRlcyIsIl9icmVha3BvaW50IiwiX3dpZHRoIiwiX2l0ZW1zIiwiX2Nsb25lcyIsIl9tZXJnZXJzIiwiX2ludmFsaWRhdGVkIiwiX3BpcGUiLCJlYWNoIiwiUGx1Z2lucyIsInByb3h5IiwidG9Mb3dlckNhc2UiLCJzbGljZSIsIlBpcGUiLCJwdXNoIiwiZmlsdGVyIiwicnVuIiwic2V0dXAiLCJpbml0aWFsaXplIiwibyIsInRvdWNoZXMiLCJ4IiwicGFnZVgiLCJ5IiwicGFnZVkiLCJjbGllbnRYIiwiY2xpZW50WSIsInIiLCJjcmVhdGVFbGVtZW50Iiwic3R5bGUiLCJhIiwiaCIsImwiLCJjIiwibmF2aWdhdG9yIiwibXNNYXhUb3VjaFBvaW50cyIsImQiLCJtc1BvaW50ZXJFbmFibGVkIiwic3RhcnQiLCJzdGFydFgiLCJzdGFydFkiLCJjdXJyZW50IiwiY3VycmVudFgiLCJjdXJyZW50WSIsIm9mZnNldFgiLCJvZmZzZXRZIiwiZGlzdGFuY2UiLCJzdGFydFRpbWUiLCJlbmRUaW1lIiwidXBkYXRlZFgiLCJ0YXJnZXRFbCIsImlzVG91Y2giLCJpc1Njcm9sbGluZyIsImlzU3dpcGluZyIsImRpcmVjdGlvbiIsImluTW90aW9uIiwiX29uRHJhZ1N0YXJ0IiwiX29uRHJhZ01vdmUiLCJfb25EcmFnRW5kIiwiX3RyYW5zaXRpb25FbmQiLCJfcmVzaXplciIsIl9yZXNwb25zaXZlQ2FsbCIsIl9nb1RvTG9vcCIsIl9jaGVja1Zpc2liaWxlIiwiaXRlbXMiLCJsb29wIiwiY2VudGVyIiwibW91c2VEcmFnIiwidG91Y2hEcmFnIiwicHVsbERyYWciLCJmcmVlRHJhZyIsIm1hcmdpbiIsInN0YWdlUGFkZGluZyIsIm1lcmdlIiwibWVyZ2VGaXQiLCJhdXRvV2lkdGgiLCJzdGFydFBvc2l0aW9uIiwicnRsIiwic21hcnRTcGVlZCIsImZsdWlkU3BlZWQiLCJkcmFnRW5kU3BlZWQiLCJyZXNwb25zaXZlIiwicmVzcG9uc2l2ZVJlZnJlc2hSYXRlIiwicmVzcG9uc2l2ZUJhc2VFbGVtZW50IiwicmVzcG9uc2l2ZUNsYXNzIiwiZmFsbGJhY2tFYXNpbmciLCJpbmZvIiwibmVzdGVkSXRlbVNlbGVjdG9yIiwiaXRlbUVsZW1lbnQiLCJzdGFnZUVsZW1lbnQiLCJ0aGVtZUNsYXNzIiwiYmFzZUNsYXNzIiwiaXRlbUNsYXNzIiwiY2VudGVyQ2xhc3MiLCJhY3RpdmVDbGFzcyIsIldpZHRoIiwiRGVmYXVsdCIsIklubmVyIiwiT3V0ZXIiLCJyZWxhdGl2ZSIsIiRzdGFnZSIsImNoaWxkcmVuIiwibGVuZ3RoIiwicmVtb3ZlIiwiTWF0aCIsIm1heCIsImFicyIsImVxIiwicG9wIiwiYXBwZW5kIiwiY2xvbmUiLCJhZGRDbGFzcyIsInByZXBlbmQiLCJ3aWR0aCIsInRvRml4ZWQiLCJtaW4iLCJjc3MiLCJncmVwIiwicmVzZXQiLCJpbmRleCIsImFuaW1hdGUiLCJjb29yZGluYXRlcyIsIm9wIiwicmVtb3ZlQ2xhc3MiLCJqb2luIiwicHJvdG90eXBlIiwidHJpZ2dlciIsInRvZ2dsZUNsYXNzIiwiYnJvd3NlclN1cHBvcnQiLCJpbWFnZXNMb2FkZWQiLCJmaW5kIiwicHJlbG9hZEF1dG9XaWR0aEltYWdlcyIsIndyYXAiLCJwYXJlbnQiLCJyZXBsYWNlIiwibm90IiwicmVmcmVzaCIsImV2ZW50c0NhbGwiLCJpbnRlcm5hbEV2ZW50cyIsImFkZFRyaWdnZXJhYmxlRXZlbnRzIiwidmlld3BvcnQiLCJOdW1iZXIiLCJhdHRyIiwicHJvcGVydHkiLCJuYW1lIiwidmFsdWUiLCJpbnZhbGlkYXRlIiwib3B0aW9uc0xvZ2ljIiwicHJlcGFyZSIsImNvbnRlbnQiLCJkYXRhIiwidXBkYXRlIiwiYWxsIiwiRGF0ZSIsImdldFRpbWUiLCJvcmllbnRhdGlvbiIsIndhdGNoVmlzaWJpbGl0eSIsIm9uRHJhZ1N0YXJ0Iiwib25EcmFnTW92ZSIsIm9uRHJhZ0VuZCIsIl9vblJlc2l6ZSIsIm9uUmVzaXplIiwidHJhbnNpdGlvbkVuZCIsIl9wcmV2ZW50Q2xpY2siLCJwcmV2ZW50Q2xpY2siLCJvblRocm90dGxlZFJlc2l6ZSIsImNsZWFyVGltZW91dCIsInJlc2l6ZVRpbWVyIiwic2V0VGltZW91dCIsImlzRGVmYXVsdFByZXZlbnRlZCIsImV2ZW50c1JvdXRlciIsInR5cGUiLCJvbiIsImdldCIsIm9uc2VsZWN0c3RhcnQiLCJ0cmFuc2l0aW9uRW5kVmVuZG9yIiwib3JpZ2luYWxFdmVudCIsImV2ZW50Iiwid2hpY2giLCJzcGVlZCIsInBvc2l0aW9uIiwibGVmdCIsInRvcCIsInN1cHBvcnQzZCIsImdldFRyYW5zZm9ybVByb3BlcnR5IiwidGFyZ2V0Iiwic3JjRWxlbWVudCIsInRhZ05hbWUiLCJkcmFnZ2FibGUiLCJtaW5pbXVtIiwibWF4aW11bSIsInByZXZlbnREZWZhdWx0IiwicmV0dXJuVmFsdWUiLCJyZW1vdmVBdHRyaWJ1dGUiLCJyZW1vdmVDbGljayIsImNsb3Nlc3QiLCJvZmYiLCJzdG9wUHJvcGFnYXRpb24iLCJnZXRDb21wdXRlZFN0eWxlIiwiZ2V0UHJvcGVydHlWYWx1ZSIsInZlbmRvck5hbWUiLCJzcGxpdCIsInRyYW5zZm9ybSIsInRyYW5zaXRpb24iLCJub3JtYWxpemUiLCJzdXBwcmVzcyIsInJlbGVhc2UiLCJpc051bWVyaWMiLCJyZXZlcnQiLCJtZXJnZXJzIiwiY2xvbmVzIiwibWFwIiwiZHVyYXRpb24iLCJ0byIsIm5leHQiLCJwcmV2Iiwib3JpZ2luYWxUYXJnZXQiLCJpbm5lcldpZHRoIiwiZG9jdW1lbnRFbGVtZW50IiwiY2xpZW50V2lkdGgiLCJlbXB0eSIsImpRdWVyeSIsIm5vZGVUeXBlIiwiYW5kU2VsZiIsImFkZCIsImJlZm9yZSIsInNwbGljZSIsInJlbGF0ZWRUYXJnZXQiLCJhcHBseSIsImNhbGwiLCJhcmd1bWVudHMiLCJkZXN0cm95Iiwib2Zmc2V0V2lkdGgiLCJvZmZzZXRIZWlnaHQiLCJjbGVhckludGVydmFsIiwic2V0SW50ZXJ2YWwiLCJJbWFnZSIsIm9ubG9hZCIsInNyYyIsImhhc0NsYXNzIiwicmVtb3ZlRGF0YSIsImNvbnRlbnRzIiwidW53cmFwIiwiYWRkRXZlbnRMaXN0ZW5lciIsImF0dGFjaEV2ZW50IiwicmVtb3ZlRXZlbnRMaXN0ZW5lciIsImRldGFjaEV2ZW50IiwiaXRlbSIsImNvdW50IiwiY2FtZWxDYXNlIiwiRXZlbnQiLCJvblRyaWdnZXIiLCJ0cmFuc2Zvcm1WZW5kb3IiLCJmbiIsIm93bENhcm91c2VsIiwiQ29uc3RydWN0b3IiLCJ3aW5kb3ciLCJaZXB0byIsImRvY3VtZW50IiwiX2NvcmUiLCJfbG9hZGVkIiwiX2hhbmRsZXJzIiwibmFtZXNwYWNlIiwibGF6eUxvYWQiLCJjZWlsIiwibG9hZCIsImluQXJyYXkiLCJkZXZpY2VQaXhlbFJhdGlvIiwiZWxlbWVudCIsInVybCIsImlzIiwib25lIiwib3BhY2l0eSIsImhhbmRsZXJzIiwiT2JqZWN0IiwiZ2V0T3duUHJvcGVydHlOYW1lcyIsIkxhenkiLCJhdXRvSGVpZ2h0IiwiYXV0b0hlaWdodENsYXNzIiwiaGVpZ2h0IiwiQXV0b0hlaWdodCIsIl92aWRlb3MiLCJfcGxheWluZyIsIl9mdWxsc2NyZWVuIiwidmlkZW8iLCJpc0luRnVsbFNjcmVlbiIsInN0b3AiLCJmZXRjaCIsInBsYXkiLCJ2aWRlb0hlaWdodCIsInZpZGVvV2lkdGgiLCJFcnJvciIsIm1hdGNoIiwiaW5kZXhPZiIsImlkIiwidGh1bWJuYWlsIiwiYWZ0ZXIiLCJhamF4IiwianNvbnAiLCJkYXRhVHlwZSIsInN1Y2Nlc3MiLCJ0aHVtYm5haWxfbGFyZ2UiLCJmdWxsc2NyZWVuRWxlbWVudCIsIm1vekZ1bGxTY3JlZW5FbGVtZW50Iiwid2Via2l0RnVsbHNjcmVlbkVsZW1lbnQiLCJWaWRlbyIsImNvcmUiLCJzd2FwcGluZyIsInByZXZpb3VzIiwiYW5pbWF0ZU91dCIsImFuaW1hdGVJbiIsInN3YXAiLCJjbGVhciIsIkFuaW1hdGUiLCJhdXRvcGxheSIsImF1dG9wbGF5SG92ZXJQYXVzZSIsInBhdXNlIiwiYXV0b3BsYXlUaW1lb3V0IiwiYXV0b3BsYXlTcGVlZCIsInZpZGVvUGxheSIsImludGVydmFsIiwiaGlkZGVuIiwiX2luaXRpYWxpemVkIiwiX3BhZ2VzIiwiX2NvbnRyb2xzIiwiX3RlbXBsYXRlcyIsIl9vdmVycmlkZXMiLCJkb3RzRGF0YSIsIm5hdlJld2luZCIsImRyYXciLCJuYXYiLCJuYXZUZXh0IiwibmF2U3BlZWQiLCJuYXZFbGVtZW50IiwibmF2Q29udGFpbmVyIiwibmF2Q29udGFpbmVyQ2xhc3MiLCJuYXZDbGFzcyIsInNsaWRlQnkiLCJkb3RDbGFzcyIsImRvdHNDbGFzcyIsImRvdHMiLCJkb3RzRWFjaCIsImRvdERhdGEiLCJkb3RzU3BlZWQiLCJkb3RzQ29udGFpbmVyIiwiY29udHJvbHNDbGFzcyIsInByb3AiLCIkY29udGFpbmVyIiwiYXBwZW5kVG8iLCIkaW5kaWNhdG9ycyIsImhpZGUiLCJwcmVwZW5kVG8iLCIkbmV4dCIsIiRwcmV2aW91cyIsImh0bWwiLCJvdmVyaWRlcyIsImVuZCIsInRvZ2dsZSIsIkFycmF5IiwicGFnZSIsInNpemUiLCJnZXRQb3NpdGlvbiIsIk5hdmlnYXRpb24iLCJfaGFzaGVzIiwibG9jYXRpb24iLCJoYXNoIiwic3Vic3RyaW5nIiwiVVJMaGFzaExpc3RlbmVyIiwiSGFzaCJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUMsVUFBU0EsQ0FBVCxFQUFXQyxDQUFYLEVBQWFD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QUlDLENBQUosSUFBU2tTLE1BQU0sQ0FBQ0MsbUJBQVAsQ0FBMkIsSUFBM0IsQ0FBVDtBQUEwQyxvQkFBWSxPQUFPLEtBQUtuUyxDQUFMLENBQW5CLEtBQTZCLEtBQUtBLENBQUwsSUFBUSxJQUFyQztBQUExQztBQUFxRixHQUF2USxFQUF3UUgsQ0FBQyxDQUFDZ1IsRUFBRixDQUFLQyxXQUFMLENBQWlCQyxXQUFqQixDQUE2QnRQLE9BQTdCLENBQXFDdVcsSUFBckMsR0FBMEMvWCxDQUFsVDtBQUFvVCxDQUF2aEMsQ0FBd2hDK1EsTUFBTSxDQUFDQyxLQUFQLElBQWNELG9DQUF0aUMsRUFBb2pDQSxNQUFwakMsRUFBMmpDRSxRQUEzakMsQ0FEOXNPLEMiLCJmaWxlIjoiZnJvbnRlbmQtb3dsLmNhcm91c2VsLm1pbi1qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxyXG4gKiBPd2wgY2Fyb3VzZWxcclxuICogQHZlcnNpb24gMi4yLjBcclxuICogQGF1dGhvciBCYXJ0b3N6IFdvamNpZWNob3dza2lcclxuICogQGxpY2Vuc2UgVGhlIE1JVCBMaWNlbnNlIChNSVQpXHJcbiAqIEB0b2RvIExhenkgTG9hZCBJY29uXHJcbiAqIEB0b2RvIHByZXZlbnQgYW5pbWF0aW9uZW5kIGJ1YmxpbmdcclxuICogQHRvZG8gaXRlbXNTY2FsZVVwXHJcbiAqIEB0b2RvIFRlc3QgWmVwdG9cclxuICogQHRvZG8gc3RhZ2VQYWRkaW5nIGNhbGN1bGF0ZSB3cm9uZyBhY3RpdmUgY2xhc3Nlc1xyXG4gKi9cclxuIWZ1bmN0aW9uKHQsZSxpLHMpe2Z1bmN0aW9uIG4oZSxpKXt0aGlzLnNldHRpbmdzPW51bGwsdGhpcy5vcHRpb25zPXQuZXh0ZW5kKHt9LG4uRGVmYXVsdHMsaSksdGhpcy4kZWxlbWVudD10KGUpLHRoaXMuZHJhZz10LmV4dGVuZCh7fSxwKSx0aGlzLnN0YXRlPXQuZXh0ZW5kKHt9LHUpLHRoaXMuZT10LmV4dGVuZCh7fSxnKSx0aGlzLl9wbHVnaW5zPXt9LHRoaXMuX3N1cHJlc3M9e30sdGhpcy5fY3VycmVudD1udWxsLHRoaXMuX3NwZWVkPW51bGwsdGhpcy5fY29vcmRpbmF0ZXM9W10sdGhpcy5fYnJlYWtwb2ludD1udWxsLHRoaXMuX3dpZHRoPW51bGwsdGhpcy5faXRlbXM9W10sdGhpcy5fY2xvbmVzPVtdLHRoaXMuX21lcmdlcnM9W10sdGhpcy5faW52YWxpZGF0ZWQ9e30sdGhpcy5fcGlwZT1bXSx0LmVhY2gobi5QbHVnaW5zLHQucHJveHkoZnVuY3Rpb24odCxlKXt0aGlzLl9wbHVnaW5zW3RbMF0udG9Mb3dlckNhc2UoKSt0LnNsaWNlKDEpXT1uZXcgZSh0aGlzKX0sdGhpcykpLHQuZWFjaChuLlBpcGUsdC5wcm94eShmdW5jdGlvbihlLGkpe3RoaXMuX3BpcGUucHVzaCh7ZmlsdGVyOmkuZmlsdGVyLHJ1bjp0LnByb3h5KGkucnVuLHRoaXMpfSl9LHRoaXMpKSx0aGlzLnNldHVwKCksdGhpcy5pbml0aWFsaXplKCl9ZnVuY3Rpb24gbyh0KXtpZih0LnRvdWNoZXMhPT1zKXJldHVybnt4OnQudG91Y2hlc1swXS5wYWdlWCx5OnQudG91Y2hlc1swXS5wYWdlWX07aWYodC50b3VjaGVzPT09cyl7aWYodC5wYWdlWCE9PXMpcmV0dXJue3g6dC5wYWdlWCx5OnQucGFnZVl9O2lmKHQucGFnZVg9PT1zKXJldHVybnt4OnQuY2xpZW50WCx5OnQuY2xpZW50WX19fWZ1bmN0aW9uIHIodCl7dmFyIGUscyxuPWkuY3JlYXRlRWxlbWVudChcImRpdlwiKSxvPXQ7Zm9yKGUgaW4gbylpZihzPW9bZV0sXCJ1bmRlZmluZWRcIiE9dHlwZW9mIG4uc3R5bGVbc10pcmV0dXJuIG49bnVsbCxbcyxlXTtyZXR1cm5bITFdfWZ1bmN0aW9uIGEoKXtyZXR1cm4gcihbXCJ0cmFuc2l0aW9uXCIsXCJXZWJraXRUcmFuc2l0aW9uXCIsXCJNb3pUcmFuc2l0aW9uXCIsXCJPVHJhbnNpdGlvblwiXSlbMV19ZnVuY3Rpb24gaCgpe3JldHVybiByKFtcInRyYW5zZm9ybVwiLFwiV2Via2l0VHJhbnNmb3JtXCIsXCJNb3pUcmFuc2Zvcm1cIixcIk9UcmFuc2Zvcm1cIixcIm1zVHJhbnNmb3JtXCJdKVswXX1mdW5jdGlvbiBsKCl7cmV0dXJuIHIoW1wicGVyc3BlY3RpdmVcIixcIndlYmtpdFBlcnNwZWN0aXZlXCIsXCJNb3pQZXJzcGVjdGl2ZVwiLFwiT1BlcnNwZWN0aXZlXCIsXCJNc1BlcnNwZWN0aXZlXCJdKVswXX1mdW5jdGlvbiBjKCl7cmV0dXJuXCJvbnRvdWNoc3RhcnRcImluIGV8fCEhbmF2aWdhdG9yLm1zTWF4VG91Y2hQb2ludHN9ZnVuY3Rpb24gZCgpe3JldHVybiBlLm5hdmlnYXRvci5tc1BvaW50ZXJFbmFibGVkfXZhciBwLHUsZztwPXtzdGFydDowLHN0YXJ0WDowLHN0YXJ0WTowLGN1cnJlbnQ6MCxjdXJyZW50WDowLGN1cnJlbnRZOjAsb2Zmc2V0WDowLG9mZnNldFk6MCxkaXN0YW5jZTpudWxsLHN0YXJ0VGltZTowLGVuZFRpbWU6MCx1cGRhdGVkWDowLHRhcmdldEVsOm51bGx9LHU9e2lzVG91Y2g6ITEsaXNTY3JvbGxpbmc6ITEsaXNTd2lwaW5nOiExLGRpcmVjdGlvbjohMSxpbk1vdGlvbjohMX0sZz17X29uRHJhZ1N0YXJ0Om51bGwsX29uRHJhZ01vdmU6bnVsbCxfb25EcmFnRW5kOm51bGwsX3RyYW5zaXRpb25FbmQ6bnVsbCxfcmVzaXplcjpudWxsLF9yZXNwb25zaXZlQ2FsbDpudWxsLF9nb1RvTG9vcDpudWxsLF9jaGVja1Zpc2liaWxlOm51bGx9LG4uRGVmYXVsdHM9e2l0ZW1zOjMsbG9vcDohMSxjZW50ZXI6ITEsbW91c2VEcmFnOiEwLHRvdWNoRHJhZzohMCxwdWxsRHJhZzohMCxmcmVlRHJhZzohMSxtYXJnaW46MCxzdGFnZVBhZGRpbmc6MCxtZXJnZTohMSxtZXJnZUZpdDohMCxhdXRvV2lkdGg6ITEsc3RhcnRQb3NpdGlvbjowLHJ0bDohMSxzbWFydFNwZWVkOjI1MCxmbHVpZFNwZWVkOiExLGRyYWdFbmRTcGVlZDohMSxyZXNwb25zaXZlOnt9LHJlc3BvbnNpdmVSZWZyZXNoUmF0ZToyMDAscmVzcG9uc2l2ZUJhc2VFbGVtZW50OmUscmVzcG9uc2l2ZUNsYXNzOiExLGZhbGxiYWNrRWFzaW5nOlwic3dpbmdcIixpbmZvOiExLG5lc3RlZEl0ZW1TZWxlY3RvcjohMSxpdGVtRWxlbWVudDpcImRpdlwiLHN0YWdlRWxlbWVudDpcImRpdlwiLHRoZW1lQ2xhc3M6XCJvd2wtdGhlbWVcIixiYXNlQ2xhc3M6XCJvd2wtY2Fyb3VzZWxcIixpdGVtQ2xhc3M6XCJvd2wtaXRlbVwiLGNlbnRlckNsYXNzOlwiY2VudGVyXCIsYWN0aXZlQ2xhc3M6XCJhY3RpdmVcIn0sbi5XaWR0aD17RGVmYXVsdDpcImRlZmF1bHRcIixJbm5lcjpcImlubmVyXCIsT3V0ZXI6XCJvdXRlclwifSxuLlBsdWdpbnM9e30sbi5QaXBlPVt7ZmlsdGVyOltcIndpZHRoXCIsXCJpdGVtc1wiLFwic2V0dGluZ3NcIl0scnVuOmZ1bmN0aW9uKHQpe3QuY3VycmVudD10aGlzLl9pdGVtcyYmdGhpcy5faXRlbXNbdGhpcy5yZWxhdGl2ZSh0aGlzLl9jdXJyZW50KV19fSx7ZmlsdGVyOltcIml0ZW1zXCIsXCJzZXR0aW5nc1wiXSxydW46ZnVuY3Rpb24oKXt2YXIgdD10aGlzLl9jbG9uZXMsZT10aGlzLiRzdGFnZS5jaGlsZHJlbihcIi5jbG9uZWRcIik7KGUubGVuZ3RoIT09dC5sZW5ndGh8fCF0aGlzLnNldHRpbmdzLmxvb3AmJnQubGVuZ3RoPjApJiYodGhpcy4kc3RhZ2UuY2hpbGRyZW4oXCIuY2xvbmVkXCIpLnJlbW92ZSgpLHRoaXMuX2Nsb25lcz1bXSl9fSx7ZmlsdGVyOltcIml0ZW1zXCIsXCJzZXR0aW5nc1wiXSxydW46ZnVuY3Rpb24oKXt2YXIgdCxlLGk9dGhpcy5fY2xvbmVzLHM9dGhpcy5faXRlbXMsbj10aGlzLnNldHRpbmdzLmxvb3A/aS5sZW5ndGgtTWF0aC5tYXgoMip0aGlzLnNldHRpbmdzLml0ZW1zLDQpOjA7Zm9yKHQ9MCxlPU1hdGguYWJzKG4vMik7ZT50O3QrKyluPjA/KHRoaXMuJHN0YWdlLmNoaWxkcmVuKCkuZXEocy5sZW5ndGgraS5sZW5ndGgtMSkucmVtb3ZlKCksaS5wb3AoKSx0aGlzLiRzdGFnZS5jaGlsZHJlbigpLmVxKDApLnJlbW92ZSgpLGkucG9wKCkpOihpLnB1c2goaS5sZW5ndGgvMiksdGhpcy4kc3RhZ2UuYXBwZW5kKHNbaVtpLmxlbmd0aC0xXV0uY2xvbmUoKS5hZGRDbGFzcyhcImNsb25lZFwiKSksaS5wdXNoKHMubGVuZ3RoLTEtKGkubGVuZ3RoLTEpLzIpLHRoaXMuJHN0YWdlLnByZXBlbmQoc1tpW2kubGVuZ3RoLTFdXS5jbG9uZSgpLmFkZENsYXNzKFwiY2xvbmVkXCIpKSl9fSx7ZmlsdGVyOltcIndpZHRoXCIsXCJpdGVtc1wiLFwic2V0dGluZ3NcIl0scnVuOmZ1bmN0aW9uKCl7dmFyIHQsZSxpLHM9dGhpcy5zZXR0aW5ncy5ydGw/MTotMSxuPSh0aGlzLndpZHRoKCkvdGhpcy5zZXR0aW5ncy5pdGVtcykudG9GaXhlZCgzKSxvPTA7Zm9yKHRoaXMuX2Nvb3JkaW5hdGVzPVtdLGU9MCxpPXRoaXMuX2Nsb25lcy5sZW5ndGgrdGhpcy5faXRlbXMubGVuZ3RoO2k+ZTtlKyspdD10aGlzLl9tZXJnZXJzW3RoaXMucmVsYXRpdmUoZSldLHQ9dGhpcy5zZXR0aW5ncy5tZXJnZUZpdCYmTWF0aC5taW4odCx0aGlzLnNldHRpbmdzLml0ZW1zKXx8dCxvKz0odGhpcy5zZXR0aW5ncy5hdXRvV2lkdGg/dGhpcy5faXRlbXNbdGhpcy5yZWxhdGl2ZShlKV0ud2lkdGgoKSt0aGlzLnNldHRpbmdzLm1hcmdpbjpuKnQpKnMsdGhpcy5fY29vcmRpbmF0ZXMucHVzaChvKX19LHtmaWx0ZXI6W1wid2lkdGhcIixcIml0ZW1zXCIsXCJzZXR0aW5nc1wiXSxydW46ZnVuY3Rpb24oKXt2YXIgZSxpLHM9KHRoaXMud2lkdGgoKS90aGlzLnNldHRpbmdzLml0ZW1zKS50b0ZpeGVkKDMpLG49e3dpZHRoOk1hdGguYWJzKHRoaXMuX2Nvb3JkaW5hdGVzW3RoaXMuX2Nvb3JkaW5hdGVzLmxlbmd0aC0xXSkrMip0aGlzLnNldHRpbmdzLnN0YWdlUGFkZGluZyxcInBhZGRpbmctbGVmdFwiOnRoaXMuc2V0dGluZ3Muc3RhZ2VQYWRkaW5nfHxcIlwiLFwicGFkZGluZy1yaWdodFwiOnRoaXMuc2V0dGluZ3Muc3RhZ2VQYWRkaW5nfHxcIlwifTtpZih0aGlzLiRzdGFnZS5jc3Mobiksbj17d2lkdGg6dGhpcy5zZXR0aW5ncy5hdXRvV2lkdGg/XCJhdXRvXCI6cy10aGlzLnNldHRpbmdzLm1hcmdpbn0sblt0aGlzLnNldHRpbmdzLnJ0bD9cIm1hcmdpbi1sZWZ0XCI6XCJtYXJnaW4tcmlnaHRcIl09dGhpcy5zZXR0aW5ncy5tYXJnaW4sIXRoaXMuc2V0dGluZ3MuYXV0b1dpZHRoJiZ0LmdyZXAodGhpcy5fbWVyZ2VycyxmdW5jdGlvbih0KXtyZXR1cm4gdD4xfSkubGVuZ3RoPjApZm9yKGU9MCxpPXRoaXMuX2Nvb3JkaW5hdGVzLmxlbmd0aDtpPmU7ZSsrKW4ud2lkdGg9TWF0aC5hYnModGhpcy5fY29vcmRpbmF0ZXNbZV0pLU1hdGguYWJzKHRoaXMuX2Nvb3JkaW5hdGVzW2UtMV18fDApLXRoaXMuc2V0dGluZ3MubWFyZ2luLHRoaXMuJHN0YWdlLmNoaWxkcmVuKCkuZXEoZSkuY3NzKG4pO2Vsc2UgdGhpcy4kc3RhZ2UuY2hpbGRyZW4oKS5jc3Mobil9fSx7ZmlsdGVyOltcIndpZHRoXCIsXCJpdGVtc1wiLFwic2V0dGluZ3NcIl0scnVuOmZ1bmN0aW9uKHQpe3QuY3VycmVudCYmdGhpcy5yZXNldCh0aGlzLiRzdGFnZS5jaGlsZHJlbigpLmluZGV4KHQuY3VycmVudCkpfX0se2ZpbHRlcjpbXCJwb3NpdGlvblwiXSxydW46ZnVuY3Rpb24oKXt0aGlzLmFuaW1hdGUodGhpcy5jb29yZGluYXRlcyh0aGlzLl9jdXJyZW50KSl9fSx7ZmlsdGVyOltcIndpZHRoXCIsXCJwb3NpdGlvblwiLFwiaXRlbXNcIixcInNldHRpbmdzXCJdLHJ1bjpmdW5jdGlvbigpe3ZhciB0LGUsaSxzLG49dGhpcy5zZXR0aW5ncy5ydGw/MTotMSxvPTIqdGhpcy5zZXR0aW5ncy5zdGFnZVBhZGRpbmcscj10aGlzLmNvb3JkaW5hdGVzKHRoaXMuY3VycmVudCgpKStvLGE9cit0aGlzLndpZHRoKCkqbixoPVtdO2ZvcihpPTAscz10aGlzLl9jb29yZGluYXRlcy5sZW5ndGg7cz5pO2krKyl0PXRoaXMuX2Nvb3JkaW5hdGVzW2ktMV18fDAsZT1NYXRoLmFicyh0aGlzLl9jb29yZGluYXRlc1tpXSkrbypuLCh0aGlzLm9wKHQsXCI8PVwiLHIpJiZ0aGlzLm9wKHQsXCI+XCIsYSl8fHRoaXMub3AoZSxcIjxcIixyKSYmdGhpcy5vcChlLFwiPlwiLGEpKSYmaC5wdXNoKGkpO3RoaXMuJHN0YWdlLmNoaWxkcmVuKFwiLlwiK3RoaXMuc2V0dGluZ3MuYWN0aXZlQ2xhc3MpLnJlbW92ZUNsYXNzKHRoaXMuc2V0dGluZ3MuYWN0aXZlQ2xhc3MpLHRoaXMuJHN0YWdlLmNoaWxkcmVuKFwiOmVxKFwiK2guam9pbihcIiksIDplcShcIikrXCIpXCIpLmFkZENsYXNzKHRoaXMuc2V0dGluZ3MuYWN0aXZlQ2xhc3MpLHRoaXMuc2V0dGluZ3MuY2VudGVyJiYodGhpcy4kc3RhZ2UuY2hpbGRyZW4oXCIuXCIrdGhpcy5zZXR0aW5ncy5jZW50ZXJDbGFzcykucmVtb3ZlQ2xhc3ModGhpcy5zZXR0aW5ncy5jZW50ZXJDbGFzcyksdGhpcy4kc3RhZ2UuY2hpbGRyZW4oKS5lcSh0aGlzLmN1cnJlbnQoKSkuYWRkQ2xhc3ModGhpcy5zZXR0aW5ncy5jZW50ZXJDbGFzcykpfX1dLG4ucHJvdG90eXBlLmluaXRpYWxpemU9ZnVuY3Rpb24oKXtpZih0aGlzLnRyaWdnZXIoXCJpbml0aWFsaXplXCIpLHRoaXMuJGVsZW1lbnQuYWRkQ2xhc3ModGhpcy5zZXR0aW5ncy5iYXNlQ2xhc3MpLmFkZENsYXNzKHRoaXMuc2V0dGluZ3MudGhlbWVDbGFzcykudG9nZ2xlQ2xhc3MoXCJvd2wtcnRsXCIsdGhpcy5zZXR0aW5ncy5ydGwpLHRoaXMuYnJvd3NlclN1cHBvcnQoKSx0aGlzLnNldHRpbmdzLmF1dG9XaWR0aCYmdGhpcy5zdGF0ZS5pbWFnZXNMb2FkZWQhPT0hMCl7dmFyIGUsaSxuO2lmKGU9dGhpcy4kZWxlbWVudC5maW5kKFwiaW1nXCIpLGk9dGhpcy5zZXR0aW5ncy5uZXN0ZWRJdGVtU2VsZWN0b3I/XCIuXCIrdGhpcy5zZXR0aW5ncy5uZXN0ZWRJdGVtU2VsZWN0b3I6cyxuPXRoaXMuJGVsZW1lbnQuY2hpbGRyZW4oaSkud2lkdGgoKSxlLmxlbmd0aCYmMD49bilyZXR1cm4gdGhpcy5wcmVsb2FkQXV0b1dpZHRoSW1hZ2VzKGUpLCExfXRoaXMuJGVsZW1lbnQuYWRkQ2xhc3MoXCJvd2wtbG9hZGluZ1wiKSx0aGlzLiRzdGFnZT10KFwiPFwiK3RoaXMuc2V0dGluZ3Muc3RhZ2VFbGVtZW50KycgY2xhc3M9XCJvd2wtc3RhZ2VcIi8+Jykud3JhcCgnPGRpdiBjbGFzcz1cIm93bC1zdGFnZS1vdXRlclwiPicpLHRoaXMuJGVsZW1lbnQuYXBwZW5kKHRoaXMuJHN0YWdlLnBhcmVudCgpKSx0aGlzLnJlcGxhY2UodGhpcy4kZWxlbWVudC5jaGlsZHJlbigpLm5vdCh0aGlzLiRzdGFnZS5wYXJlbnQoKSkpLHRoaXMuX3dpZHRoPXRoaXMuJGVsZW1lbnQud2lkdGgoKSx0aGlzLnJlZnJlc2goKSx0aGlzLiRlbGVtZW50LnJlbW92ZUNsYXNzKFwib3dsLWxvYWRpbmdcIikuYWRkQ2xhc3MoXCJvd2wtbG9hZGVkXCIpLHRoaXMuZXZlbnRzQ2FsbCgpLHRoaXMuaW50ZXJuYWxFdmVudHMoKSx0aGlzLmFkZFRyaWdnZXJhYmxlRXZlbnRzKCksdGhpcy50cmlnZ2VyKFwiaW5pdGlhbGl6ZWRcIil9LG4ucHJvdG90eXBlLnNldHVwPWZ1bmN0aW9uKCl7dmFyIGU9dGhpcy52aWV3cG9ydCgpLGk9dGhpcy5vcHRpb25zLnJlc3BvbnNpdmUscz0tMSxuPW51bGw7aT8odC5lYWNoKGksZnVuY3Rpb24odCl7ZT49dCYmdD5zJiYocz1OdW1iZXIodCkpfSksbj10LmV4dGVuZCh7fSx0aGlzLm9wdGlvbnMsaVtzXSksZGVsZXRlIG4ucmVzcG9uc2l2ZSxuLnJlc3BvbnNpdmVDbGFzcyYmdGhpcy4kZWxlbWVudC5hdHRyKFwiY2xhc3NcIixmdW5jdGlvbih0LGUpe3JldHVybiBlLnJlcGxhY2UoL1xcYiBvd2wtcmVzcG9uc2l2ZS1cXFMrL2csXCJcIil9KS5hZGRDbGFzcyhcIm93bC1yZXNwb25zaXZlLVwiK3MpKTpuPXQuZXh0ZW5kKHt9LHRoaXMub3B0aW9ucyksKG51bGw9PT10aGlzLnNldHRpbmdzfHx0aGlzLl9icmVha3BvaW50IT09cykmJih0aGlzLnRyaWdnZXIoXCJjaGFuZ2VcIix7cHJvcGVydHk6e25hbWU6XCJzZXR0aW5nc1wiLHZhbHVlOm59fSksdGhpcy5fYnJlYWtwb2ludD1zLHRoaXMuc2V0dGluZ3M9bix0aGlzLmludmFsaWRhdGUoXCJzZXR0aW5nc1wiKSx0aGlzLnRyaWdnZXIoXCJjaGFuZ2VkXCIse3Byb3BlcnR5OntuYW1lOlwic2V0dGluZ3NcIix2YWx1ZTp0aGlzLnNldHRpbmdzfX0pKX0sbi5wcm90b3R5cGUub3B0aW9uc0xvZ2ljPWZ1bmN0aW9uKCl7dGhpcy4kZWxlbWVudC50b2dnbGVDbGFzcyhcIm93bC1jZW50ZXJcIix0aGlzLnNldHRpbmdzLmNlbnRlciksdGhpcy5zZXR0aW5ncy5sb29wJiZ0aGlzLl9pdGVtcy5sZW5ndGg8dGhpcy5zZXR0aW5ncy5pdGVtcyYmKHRoaXMuc2V0dGluZ3MubG9vcD0hMSksdGhpcy5zZXR0aW5ncy5hdXRvV2lkdGgmJih0aGlzLnNldHRpbmdzLnN0YWdlUGFkZGluZz0hMSx0aGlzLnNldHRpbmdzLm1lcmdlPSExKX0sbi5wcm90b3R5cGUucHJlcGFyZT1mdW5jdGlvbihlKXt2YXIgaT10aGlzLnRyaWdnZXIoXCJwcmVwYXJlXCIse2NvbnRlbnQ6ZX0pO3JldHVybiBpLmRhdGF8fChpLmRhdGE9dChcIjxcIit0aGlzLnNldHRpbmdzLml0ZW1FbGVtZW50K1wiLz5cIikuYWRkQ2xhc3ModGhpcy5zZXR0aW5ncy5pdGVtQ2xhc3MpLmFwcGVuZChlKSksdGhpcy50cmlnZ2VyKFwicHJlcGFyZWRcIix7Y29udGVudDppLmRhdGF9KSxpLmRhdGF9LG4ucHJvdG90eXBlLnVwZGF0ZT1mdW5jdGlvbigpe2Zvcih2YXIgZT0wLGk9dGhpcy5fcGlwZS5sZW5ndGgscz10LnByb3h5KGZ1bmN0aW9uKHQpe3JldHVybiB0aGlzW3RdfSx0aGlzLl9pbnZhbGlkYXRlZCksbj17fTtpPmU7KSh0aGlzLl9pbnZhbGlkYXRlZC5hbGx8fHQuZ3JlcCh0aGlzLl9waXBlW2VdLmZpbHRlcixzKS5sZW5ndGg+MCkmJnRoaXMuX3BpcGVbZV0ucnVuKG4pLGUrKzt0aGlzLl9pbnZhbGlkYXRlZD17fX0sbi5wcm90b3R5cGUud2lkdGg9ZnVuY3Rpb24odCl7c3dpdGNoKHQ9dHx8bi5XaWR0aC5EZWZhdWx0KXtjYXNlIG4uV2lkdGguSW5uZXI6Y2FzZSBuLldpZHRoLk91dGVyOnJldHVybiB0aGlzLl93aWR0aDtkZWZhdWx0OnJldHVybiB0aGlzLl93aWR0aC0yKnRoaXMuc2V0dGluZ3Muc3RhZ2VQYWRkaW5nK3RoaXMuc2V0dGluZ3MubWFyZ2lufX0sbi5wcm90b3R5cGUucmVmcmVzaD1mdW5jdGlvbigpe2lmKDA9PT10aGlzLl9pdGVtcy5sZW5ndGgpcmV0dXJuITE7KG5ldyBEYXRlKS5nZXRUaW1lKCk7dGhpcy50cmlnZ2VyKFwicmVmcmVzaFwiKSx0aGlzLnNldHVwKCksdGhpcy5vcHRpb25zTG9naWMoKSx0aGlzLiRzdGFnZS5hZGRDbGFzcyhcIm93bC1yZWZyZXNoXCIpLHRoaXMudXBkYXRlKCksdGhpcy4kc3RhZ2UucmVtb3ZlQ2xhc3MoXCJvd2wtcmVmcmVzaFwiKSx0aGlzLnN0YXRlLm9yaWVudGF0aW9uPWUub3JpZW50YXRpb24sdGhpcy53YXRjaFZpc2liaWxpdHkoKSx0aGlzLnRyaWdnZXIoXCJyZWZyZXNoZWRcIil9LG4ucHJvdG90eXBlLmV2ZW50c0NhbGw9ZnVuY3Rpb24oKXt0aGlzLmUuX29uRHJhZ1N0YXJ0PXQucHJveHkoZnVuY3Rpb24odCl7dGhpcy5vbkRyYWdTdGFydCh0KX0sdGhpcyksdGhpcy5lLl9vbkRyYWdNb3ZlPXQucHJveHkoZnVuY3Rpb24odCl7dGhpcy5vbkRyYWdNb3ZlKHQpfSx0aGlzKSx0aGlzLmUuX29uRHJhZ0VuZD10LnByb3h5KGZ1bmN0aW9uKHQpe3RoaXMub25EcmFnRW5kKHQpfSx0aGlzKSx0aGlzLmUuX29uUmVzaXplPXQucHJveHkoZnVuY3Rpb24odCl7dGhpcy5vblJlc2l6ZSh0KX0sdGhpcyksdGhpcy5lLl90cmFuc2l0aW9uRW5kPXQucHJveHkoZnVuY3Rpb24odCl7dGhpcy50cmFuc2l0aW9uRW5kKHQpfSx0aGlzKSx0aGlzLmUuX3ByZXZlbnRDbGljaz10LnByb3h5KGZ1bmN0aW9uKHQpe3RoaXMucHJldmVudENsaWNrKHQpfSx0aGlzKX0sbi5wcm90b3R5cGUub25UaHJvdHRsZWRSZXNpemU9ZnVuY3Rpb24oKXtlLmNsZWFyVGltZW91dCh0aGlzLnJlc2l6ZVRpbWVyKSx0aGlzLnJlc2l6ZVRpbWVyPWUuc2V0VGltZW91dCh0aGlzLmUuX29uUmVzaXplLHRoaXMuc2V0dGluZ3MucmVzcG9uc2l2ZVJlZnJlc2hSYXRlKX0sbi5wcm90b3R5cGUub25SZXNpemU9ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5faXRlbXMubGVuZ3RoP3RoaXMuX3dpZHRoPT09dGhpcy4kZWxlbWVudC53aWR0aCgpPyExOnRoaXMudHJpZ2dlcihcInJlc2l6ZVwiKS5pc0RlZmF1bHRQcmV2ZW50ZWQoKT8hMToodGhpcy5fd2lkdGg9dGhpcy4kZWxlbWVudC53aWR0aCgpLHRoaXMuaW52YWxpZGF0ZShcIndpZHRoXCIpLHRoaXMucmVmcmVzaCgpLHZvaWQgdGhpcy50cmlnZ2VyKFwicmVzaXplZFwiKSk6ITF9LG4ucHJvdG90eXBlLmV2ZW50c1JvdXRlcj1mdW5jdGlvbih0KXt2YXIgZT10LnR5cGU7XCJtb3VzZWRvd25cIj09PWV8fFwidG91Y2hzdGFydFwiPT09ZT90aGlzLm9uRHJhZ1N0YXJ0KHQpOlwibW91c2Vtb3ZlXCI9PT1lfHxcInRvdWNobW92ZVwiPT09ZT90aGlzLm9uRHJhZ01vdmUodCk6XCJtb3VzZXVwXCI9PT1lfHxcInRvdWNoZW5kXCI9PT1lP3RoaXMub25EcmFnRW5kKHQpOlwidG91Y2hjYW5jZWxcIj09PWUmJnRoaXMub25EcmFnRW5kKHQpfSxuLnByb3RvdHlwZS5pbnRlcm5hbEV2ZW50cz1mdW5jdGlvbigpe3ZhciBpPShjKCksZCgpKTt0aGlzLnNldHRpbmdzLm1vdXNlRHJhZz8odGhpcy4kc3RhZ2Uub24oXCJtb3VzZWRvd25cIix0LnByb3h5KGZ1bmN0aW9uKHQpe3RoaXMuZXZlbnRzUm91dGVyKHQpfSx0aGlzKSksdGhpcy4kc3RhZ2Uub24oXCJkcmFnc3RhcnRcIixmdW5jdGlvbigpe3JldHVybiExfSksdGhpcy4kc3RhZ2UuZ2V0KDApLm9uc2VsZWN0c3RhcnQ9ZnVuY3Rpb24oKXtyZXR1cm4hMX0pOnRoaXMuJGVsZW1lbnQuYWRkQ2xhc3MoXCJvd2wtdGV4dC1zZWxlY3Qtb25cIiksdGhpcy5zZXR0aW5ncy50b3VjaERyYWcmJiFpJiZ0aGlzLiRzdGFnZS5vbihcInRvdWNoc3RhcnQgdG91Y2hjYW5jZWxcIix0LnByb3h5KGZ1bmN0aW9uKHQpe3RoaXMuZXZlbnRzUm91dGVyKHQpfSx0aGlzKSksdGhpcy50cmFuc2l0aW9uRW5kVmVuZG9yJiZ0aGlzLm9uKHRoaXMuJHN0YWdlLmdldCgwKSx0aGlzLnRyYW5zaXRpb25FbmRWZW5kb3IsdGhpcy5lLl90cmFuc2l0aW9uRW5kLCExKSx0aGlzLnNldHRpbmdzLnJlc3BvbnNpdmUhPT0hMSYmdGhpcy5vbihlLFwicmVzaXplXCIsdC5wcm94eSh0aGlzLm9uVGhyb3R0bGVkUmVzaXplLHRoaXMpKX0sbi5wcm90b3R5cGUub25EcmFnU3RhcnQ9ZnVuY3Rpb24ocyl7dmFyIG4scixhLGg7aWYobj1zLm9yaWdpbmFsRXZlbnR8fHN8fGUuZXZlbnQsMz09PW4ud2hpY2h8fHRoaXMuc3RhdGUuaXNUb3VjaClyZXR1cm4hMTtpZihcIm1vdXNlZG93blwiPT09bi50eXBlJiZ0aGlzLiRzdGFnZS5hZGRDbGFzcyhcIm93bC1ncmFiXCIpLHRoaXMudHJpZ2dlcihcImRyYWdcIiksdGhpcy5kcmFnLnN0YXJ0VGltZT0obmV3IERhdGUpLmdldFRpbWUoKSx0aGlzLnNwZWVkKDApLHRoaXMuc3RhdGUuaXNUb3VjaD0hMCx0aGlzLnN0YXRlLmlzU2Nyb2xsaW5nPSExLHRoaXMuc3RhdGUuaXNTd2lwaW5nPSExLHRoaXMuZHJhZy5kaXN0YW5jZT0wLHI9byhuKS54LGE9byhuKS55LHRoaXMuZHJhZy5vZmZzZXRYPXRoaXMuJHN0YWdlLnBvc2l0aW9uKCkubGVmdCx0aGlzLmRyYWcub2Zmc2V0WT10aGlzLiRzdGFnZS5wb3NpdGlvbigpLnRvcCx0aGlzLnNldHRpbmdzLnJ0bCYmKHRoaXMuZHJhZy5vZmZzZXRYPXRoaXMuJHN0YWdlLnBvc2l0aW9uKCkubGVmdCt0aGlzLiRzdGFnZS53aWR0aCgpLXRoaXMud2lkdGgoKSt0aGlzLnNldHRpbmdzLm1hcmdpbiksdGhpcy5zdGF0ZS5pbk1vdGlvbiYmdGhpcy5zdXBwb3J0M2QpaD10aGlzLmdldFRyYW5zZm9ybVByb3BlcnR5KCksdGhpcy5kcmFnLm9mZnNldFg9aCx0aGlzLmFuaW1hdGUoaCksdGhpcy5zdGF0ZS5pbk1vdGlvbj0hMDtlbHNlIGlmKHRoaXMuc3RhdGUuaW5Nb3Rpb24mJiF0aGlzLnN1cHBvcnQzZClyZXR1cm4gdGhpcy5zdGF0ZS5pbk1vdGlvbj0hMSwhMTt0aGlzLmRyYWcuc3RhcnRYPXItdGhpcy5kcmFnLm9mZnNldFgsdGhpcy5kcmFnLnN0YXJ0WT1hLXRoaXMuZHJhZy5vZmZzZXRZLHRoaXMuZHJhZy5zdGFydD1yLXRoaXMuZHJhZy5zdGFydFgsdGhpcy5kcmFnLnRhcmdldEVsPW4udGFyZ2V0fHxuLnNyY0VsZW1lbnQsdGhpcy5kcmFnLnVwZGF0ZWRYPXRoaXMuZHJhZy5zdGFydCwoXCJJTUdcIj09PXRoaXMuZHJhZy50YXJnZXRFbC50YWdOYW1lfHxcIkFcIj09PXRoaXMuZHJhZy50YXJnZXRFbC50YWdOYW1lKSYmKHRoaXMuZHJhZy50YXJnZXRFbC5kcmFnZ2FibGU9ITEpLHQoaSkub24oXCJtb3VzZW1vdmUub3dsLmRyYWdFdmVudHMgbW91c2V1cC5vd2wuZHJhZ0V2ZW50cyB0b3VjaG1vdmUub3dsLmRyYWdFdmVudHMgdG91Y2hlbmQub3dsLmRyYWdFdmVudHNcIix0LnByb3h5KGZ1bmN0aW9uKHQpe3RoaXMuZXZlbnRzUm91dGVyKHQpfSx0aGlzKSl9LG4ucHJvdG90eXBlLm9uRHJhZ01vdmU9ZnVuY3Rpb24odCl7dmFyIGksbixyLGEsaCxsO3RoaXMuc3RhdGUuaXNUb3VjaCYmKHRoaXMuc3RhdGUuaXNTY3JvbGxpbmd8fChpPXQub3JpZ2luYWxFdmVudHx8dHx8ZS5ldmVudCxuPW8oaSkueCxyPW8oaSkueSx0aGlzLmRyYWcuY3VycmVudFg9bi10aGlzLmRyYWcuc3RhcnRYLHRoaXMuZHJhZy5jdXJyZW50WT1yLXRoaXMuZHJhZy5zdGFydFksdGhpcy5kcmFnLmRpc3RhbmNlPXRoaXMuZHJhZy5jdXJyZW50WC10aGlzLmRyYWcub2Zmc2V0WCx0aGlzLmRyYWcuZGlzdGFuY2U8MD90aGlzLnN0YXRlLmRpcmVjdGlvbj10aGlzLnNldHRpbmdzLnJ0bD9cInJpZ2h0XCI6XCJsZWZ0XCI6dGhpcy5kcmFnLmRpc3RhbmNlPjAmJih0aGlzLnN0YXRlLmRpcmVjdGlvbj10aGlzLnNldHRpbmdzLnJ0bD9cImxlZnRcIjpcInJpZ2h0XCIpLHRoaXMuc2V0dGluZ3MubG9vcD90aGlzLm9wKHRoaXMuZHJhZy5jdXJyZW50WCxcIj5cIix0aGlzLmNvb3JkaW5hdGVzKHRoaXMubWluaW11bSgpKSkmJlwicmlnaHRcIj09PXRoaXMuc3RhdGUuZGlyZWN0aW9uP3RoaXMuZHJhZy5jdXJyZW50WC09KHRoaXMuc2V0dGluZ3MuY2VudGVyJiZ0aGlzLmNvb3JkaW5hdGVzKDApKS10aGlzLmNvb3JkaW5hdGVzKHRoaXMuX2l0ZW1zLmxlbmd0aCk6dGhpcy5vcCh0aGlzLmRyYWcuY3VycmVudFgsXCI8XCIsdGhpcy5jb29yZGluYXRlcyh0aGlzLm1heGltdW0oKSkpJiZcImxlZnRcIj09PXRoaXMuc3RhdGUuZGlyZWN0aW9uJiYodGhpcy5kcmFnLmN1cnJlbnRYKz0odGhpcy5zZXR0aW5ncy5jZW50ZXImJnRoaXMuY29vcmRpbmF0ZXMoMCkpLXRoaXMuY29vcmRpbmF0ZXModGhpcy5faXRlbXMubGVuZ3RoKSk6KGE9dGhpcy5zZXR0aW5ncy5ydGw/dGhpcy5jb29yZGluYXRlcyh0aGlzLm1heGltdW0oKSk6dGhpcy5jb29yZGluYXRlcyh0aGlzLm1pbmltdW0oKSksaD10aGlzLnNldHRpbmdzLnJ0bD90aGlzLmNvb3JkaW5hdGVzKHRoaXMubWluaW11bSgpKTp0aGlzLmNvb3JkaW5hdGVzKHRoaXMubWF4aW11bSgpKSxsPXRoaXMuc2V0dGluZ3MucHVsbERyYWc/dGhpcy5kcmFnLmRpc3RhbmNlLzU6MCx0aGlzLmRyYWcuY3VycmVudFg9TWF0aC5tYXgoTWF0aC5taW4odGhpcy5kcmFnLmN1cnJlbnRYLGErbCksaCtsKSksKHRoaXMuZHJhZy5kaXN0YW5jZT44fHx0aGlzLmRyYWcuZGlzdGFuY2U8LTgpJiYoaS5wcmV2ZW50RGVmYXVsdCE9PXM/aS5wcmV2ZW50RGVmYXVsdCgpOmkucmV0dXJuVmFsdWU9ITEsdGhpcy5zdGF0ZS5pc1N3aXBpbmc9ITApLHRoaXMuZHJhZy51cGRhdGVkWD10aGlzLmRyYWcuY3VycmVudFgsKHRoaXMuZHJhZy5jdXJyZW50WT4xNnx8dGhpcy5kcmFnLmN1cnJlbnRZPC0xNikmJnRoaXMuc3RhdGUuaXNTd2lwaW5nPT09ITEmJih0aGlzLnN0YXRlLmlzU2Nyb2xsaW5nPSEwLHRoaXMuZHJhZy51cGRhdGVkWD10aGlzLmRyYWcuc3RhcnQpLHRoaXMuYW5pbWF0ZSh0aGlzLmRyYWcudXBkYXRlZFgpKSl9LG4ucHJvdG90eXBlLm9uRHJhZ0VuZD1mdW5jdGlvbihlKXt2YXIgcyxuLG87aWYodGhpcy5zdGF0ZS5pc1RvdWNoKXtpZihcIm1vdXNldXBcIj09PWUudHlwZSYmdGhpcy4kc3RhZ2UucmVtb3ZlQ2xhc3MoXCJvd2wtZ3JhYlwiKSx0aGlzLnRyaWdnZXIoXCJkcmFnZ2VkXCIpLHRoaXMuZHJhZy50YXJnZXRFbC5yZW1vdmVBdHRyaWJ1dGUoXCJkcmFnZ2FibGVcIiksdGhpcy5zdGF0ZS5pc1RvdWNoPSExLHRoaXMuc3RhdGUuaXNTY3JvbGxpbmc9ITEsdGhpcy5zdGF0ZS5pc1N3aXBpbmc9ITEsMD09PXRoaXMuZHJhZy5kaXN0YW5jZSYmdGhpcy5zdGF0ZS5pbk1vdGlvbiE9PSEwKXJldHVybiB0aGlzLnN0YXRlLmluTW90aW9uPSExLCExO3RoaXMuZHJhZy5lbmRUaW1lPShuZXcgRGF0ZSkuZ2V0VGltZSgpLHM9dGhpcy5kcmFnLmVuZFRpbWUtdGhpcy5kcmFnLnN0YXJ0VGltZSxuPU1hdGguYWJzKHRoaXMuZHJhZy5kaXN0YW5jZSksKG4+M3x8cz4zMDApJiZ0aGlzLnJlbW92ZUNsaWNrKHRoaXMuZHJhZy50YXJnZXRFbCksbz10aGlzLmNsb3Nlc3QodGhpcy5kcmFnLnVwZGF0ZWRYKSx0aGlzLnNwZWVkKHRoaXMuc2V0dGluZ3MuZHJhZ0VuZFNwZWVkfHx0aGlzLnNldHRpbmdzLnNtYXJ0U3BlZWQpLHRoaXMuY3VycmVudChvKSx0aGlzLmludmFsaWRhdGUoXCJwb3NpdGlvblwiKSx0aGlzLnVwZGF0ZSgpLHRoaXMuc2V0dGluZ3MucHVsbERyYWd8fHRoaXMuZHJhZy51cGRhdGVkWCE9PXRoaXMuY29vcmRpbmF0ZXMobyl8fHRoaXMudHJhbnNpdGlvbkVuZCgpLHRoaXMuZHJhZy5kaXN0YW5jZT0wLHQoaSkub2ZmKFwiLm93bC5kcmFnRXZlbnRzXCIpfX0sbi5wcm90b3R5cGUucmVtb3ZlQ2xpY2s9ZnVuY3Rpb24oaSl7dGhpcy5kcmFnLnRhcmdldEVsPWksdChpKS5vbihcImNsaWNrLnByZXZlbnRDbGlja1wiLHRoaXMuZS5fcHJldmVudENsaWNrKSxlLnNldFRpbWVvdXQoZnVuY3Rpb24oKXt0KGkpLm9mZihcImNsaWNrLnByZXZlbnRDbGlja1wiKX0sMzAwKX0sbi5wcm90b3R5cGUucHJldmVudENsaWNrPWZ1bmN0aW9uKGUpe2UucHJldmVudERlZmF1bHQ/ZS5wcmV2ZW50RGVmYXVsdCgpOmUucmV0dXJuVmFsdWU9ITEsZS5zdG9wUHJvcGFnYXRpb24mJmUuc3RvcFByb3BhZ2F0aW9uKCksdChlLnRhcmdldCkub2ZmKFwiY2xpY2sucHJldmVudENsaWNrXCIpfSxuLnByb3RvdHlwZS5nZXRUcmFuc2Zvcm1Qcm9wZXJ0eT1mdW5jdGlvbigpe3ZhciB0LGk7cmV0dXJuIHQ9ZS5nZXRDb21wdXRlZFN0eWxlKHRoaXMuJHN0YWdlLmdldCgwKSxudWxsKS5nZXRQcm9wZXJ0eVZhbHVlKHRoaXMudmVuZG9yTmFtZStcInRyYW5zZm9ybVwiKSx0PXQucmVwbGFjZSgvbWF0cml4KDNkKT9cXCh8XFwpL2csXCJcIikuc3BsaXQoXCIsXCIpLGk9MTY9PT10Lmxlbmd0aCxpIT09ITA/dFs0XTp0WzEyXX0sbi5wcm90b3R5cGUuY2xvc2VzdD1mdW5jdGlvbihlKXt2YXIgaT0tMSxzPTMwLG49dGhpcy53aWR0aCgpLG89dGhpcy5jb29yZGluYXRlcygpO3JldHVybiB0aGlzLnNldHRpbmdzLmZyZWVEcmFnfHx0LmVhY2gobyx0LnByb3h5KGZ1bmN0aW9uKHQscil7cmV0dXJuIGU+ci1zJiZyK3M+ZT9pPXQ6dGhpcy5vcChlLFwiPFwiLHIpJiZ0aGlzLm9wKGUsXCI+XCIsb1t0KzFdfHxyLW4pJiYoaT1cImxlZnRcIj09PXRoaXMuc3RhdGUuZGlyZWN0aW9uP3QrMTp0KSwtMT09PWl9LHRoaXMpKSx0aGlzLnNldHRpbmdzLmxvb3B8fCh0aGlzLm9wKGUsXCI+XCIsb1t0aGlzLm1pbmltdW0oKV0pP2k9ZT10aGlzLm1pbmltdW0oKTp0aGlzLm9wKGUsXCI8XCIsb1t0aGlzLm1heGltdW0oKV0pJiYoaT1lPXRoaXMubWF4aW11bSgpKSksaX0sbi5wcm90b3R5cGUuYW5pbWF0ZT1mdW5jdGlvbihlKXt0aGlzLnRyaWdnZXIoXCJ0cmFuc2xhdGVcIiksdGhpcy5zdGF0ZS5pbk1vdGlvbj10aGlzLnNwZWVkKCk+MCx0aGlzLnN1cHBvcnQzZD90aGlzLiRzdGFnZS5jc3Moe3RyYW5zZm9ybTpcInRyYW5zbGF0ZTNkKFwiK2UrXCJweCwwcHgsIDBweClcIix0cmFuc2l0aW9uOnRoaXMuc3BlZWQoKS8xZTMrXCJzXCJ9KTp0aGlzLnN0YXRlLmlzVG91Y2g/dGhpcy4kc3RhZ2UuY3NzKHtsZWZ0OmUrXCJweFwifSk6dGhpcy4kc3RhZ2UuYW5pbWF0ZSh7bGVmdDplfSx0aGlzLnNwZWVkKCkvMWUzLHRoaXMuc2V0dGluZ3MuZmFsbGJhY2tFYXNpbmcsdC5wcm94eShmdW5jdGlvbigpe3RoaXMuc3RhdGUuaW5Nb3Rpb24mJnRoaXMudHJhbnNpdGlvbkVuZCgpfSx0aGlzKSl9LG4ucHJvdG90eXBlLmN1cnJlbnQ9ZnVuY3Rpb24odCl7aWYodD09PXMpcmV0dXJuIHRoaXMuX2N1cnJlbnQ7aWYoMD09PXRoaXMuX2l0ZW1zLmxlbmd0aClyZXR1cm4gcztpZih0PXRoaXMubm9ybWFsaXplKHQpLHRoaXMuX2N1cnJlbnQhPT10KXt2YXIgZT10aGlzLnRyaWdnZXIoXCJjaGFuZ2VcIix7cHJvcGVydHk6e25hbWU6XCJwb3NpdGlvblwiLHZhbHVlOnR9fSk7ZS5kYXRhIT09cyYmKHQ9dGhpcy5ub3JtYWxpemUoZS5kYXRhKSksdGhpcy5fY3VycmVudD10LHRoaXMuaW52YWxpZGF0ZShcInBvc2l0aW9uXCIpLHRoaXMudHJpZ2dlcihcImNoYW5nZWRcIix7cHJvcGVydHk6e25hbWU6XCJwb3NpdGlvblwiLHZhbHVlOnRoaXMuX2N1cnJlbnR9fSl9cmV0dXJuIHRoaXMuX2N1cnJlbnR9LG4ucHJvdG90eXBlLmludmFsaWRhdGU9ZnVuY3Rpb24odCl7dGhpcy5faW52YWxpZGF0ZWRbdF09ITB9LG4ucHJvdG90eXBlLnJlc2V0PWZ1bmN0aW9uKHQpe3Q9dGhpcy5ub3JtYWxpemUodCksdCE9PXMmJih0aGlzLl9zcGVlZD0wLHRoaXMuX2N1cnJlbnQ9dCx0aGlzLnN1cHByZXNzKFtcInRyYW5zbGF0ZVwiLFwidHJhbnNsYXRlZFwiXSksdGhpcy5hbmltYXRlKHRoaXMuY29vcmRpbmF0ZXModCkpLHRoaXMucmVsZWFzZShbXCJ0cmFuc2xhdGVcIixcInRyYW5zbGF0ZWRcIl0pKX0sbi5wcm90b3R5cGUubm9ybWFsaXplPWZ1bmN0aW9uKGUsaSl7dmFyIG49aT90aGlzLl9pdGVtcy5sZW5ndGg6dGhpcy5faXRlbXMubGVuZ3RoK3RoaXMuX2Nsb25lcy5sZW5ndGg7cmV0dXJuIXQuaXNOdW1lcmljKGUpfHwxPm4/czplPXRoaXMuX2Nsb25lcy5sZW5ndGg/KGUlbituKSVuOk1hdGgubWF4KHRoaXMubWluaW11bShpKSxNYXRoLm1pbih0aGlzLm1heGltdW0oaSksZSkpfSxuLnByb3RvdHlwZS5yZWxhdGl2ZT1mdW5jdGlvbih0KXtyZXR1cm4gdD10aGlzLm5vcm1hbGl6ZSh0KSx0LT10aGlzLl9jbG9uZXMubGVuZ3RoLzIsdGhpcy5ub3JtYWxpemUodCwhMCl9LG4ucHJvdG90eXBlLm1heGltdW09ZnVuY3Rpb24odCl7dmFyIGUsaSxzLG49MCxvPXRoaXMuc2V0dGluZ3M7aWYodClyZXR1cm4gdGhpcy5faXRlbXMubGVuZ3RoLTE7aWYoIW8ubG9vcCYmby5jZW50ZXIpZT10aGlzLl9pdGVtcy5sZW5ndGgtMTtlbHNlIGlmKG8ubG9vcHx8by5jZW50ZXIpaWYoby5sb29wfHxvLmNlbnRlcillPXRoaXMuX2l0ZW1zLmxlbmd0aCtvLml0ZW1zO2Vsc2V7aWYoIW8uYXV0b1dpZHRoJiYhby5tZXJnZSl0aHJvd1wiQ2FuIG5vdCBkZXRlY3QgbWF4aW11bSBhYnNvbHV0ZSBwb3NpdGlvbi5cIjtmb3IocmV2ZXJ0PW8ucnRsPzE6LTEsaT10aGlzLiRzdGFnZS53aWR0aCgpLXRoaXMuJGVsZW1lbnQud2lkdGgoKTsocz10aGlzLmNvb3JkaW5hdGVzKG4pKSYmIShzKnJldmVydD49aSk7KWU9KytufWVsc2UgZT10aGlzLl9pdGVtcy5sZW5ndGgtby5pdGVtcztyZXR1cm4gZX0sbi5wcm90b3R5cGUubWluaW11bT1mdW5jdGlvbih0KXtyZXR1cm4gdD8wOnRoaXMuX2Nsb25lcy5sZW5ndGgvMn0sbi5wcm90b3R5cGUuaXRlbXM9ZnVuY3Rpb24odCl7cmV0dXJuIHQ9PT1zP3RoaXMuX2l0ZW1zLnNsaWNlKCk6KHQ9dGhpcy5ub3JtYWxpemUodCwhMCksdGhpcy5faXRlbXNbdF0pfSxuLnByb3RvdHlwZS5tZXJnZXJzPWZ1bmN0aW9uKHQpe3JldHVybiB0PT09cz90aGlzLl9tZXJnZXJzLnNsaWNlKCk6KHQ9dGhpcy5ub3JtYWxpemUodCwhMCksdGhpcy5fbWVyZ2Vyc1t0XSl9LG4ucHJvdG90eXBlLmNsb25lcz1mdW5jdGlvbihlKXt2YXIgaT10aGlzLl9jbG9uZXMubGVuZ3RoLzIsbj1pK3RoaXMuX2l0ZW1zLmxlbmd0aCxvPWZ1bmN0aW9uKHQpe3JldHVybiB0JTI9PT0wP24rdC8yOmktKHQrMSkvMn07cmV0dXJuIGU9PT1zP3QubWFwKHRoaXMuX2Nsb25lcyxmdW5jdGlvbih0LGUpe3JldHVybiBvKGUpfSk6dC5tYXAodGhpcy5fY2xvbmVzLGZ1bmN0aW9uKHQsaSl7cmV0dXJuIHQ9PT1lP28oaSk6bnVsbH0pfSxuLnByb3RvdHlwZS5zcGVlZD1mdW5jdGlvbih0KXtyZXR1cm4gdCE9PXMmJih0aGlzLl9zcGVlZD10KSx0aGlzLl9zcGVlZH0sbi5wcm90b3R5cGUuY29vcmRpbmF0ZXM9ZnVuY3Rpb24oZSl7dmFyIGk9bnVsbDtyZXR1cm4gZT09PXM/dC5tYXAodGhpcy5fY29vcmRpbmF0ZXMsdC5wcm94eShmdW5jdGlvbih0LGUpe3JldHVybiB0aGlzLmNvb3JkaW5hdGVzKGUpfSx0aGlzKSk6KHRoaXMuc2V0dGluZ3MuY2VudGVyPyhpPXRoaXMuX2Nvb3JkaW5hdGVzW2VdLGkrPSh0aGlzLndpZHRoKCktaSsodGhpcy5fY29vcmRpbmF0ZXNbZS0xXXx8MCkpLzIqKHRoaXMuc2V0dGluZ3MucnRsPy0xOjEpKTppPXRoaXMuX2Nvb3JkaW5hdGVzW2UtMV18fDAsaSl9LG4ucHJvdG90eXBlLmR1cmF0aW9uPWZ1bmN0aW9uKHQsZSxpKXtyZXR1cm4gTWF0aC5taW4oTWF0aC5tYXgoTWF0aC5hYnMoZS10KSwxKSw2KSpNYXRoLmFicyhpfHx0aGlzLnNldHRpbmdzLnNtYXJ0U3BlZWQpfSxuLnByb3RvdHlwZS50bz1mdW5jdGlvbihpLHMpe2lmKHRoaXMuc2V0dGluZ3MubG9vcCl7dmFyIG49aS10aGlzLnJlbGF0aXZlKHRoaXMuY3VycmVudCgpKSxvPXRoaXMuY3VycmVudCgpLHI9dGhpcy5jdXJyZW50KCksYT10aGlzLmN1cnJlbnQoKStuLGg9MD5yLWE/ITA6ITEsbD10aGlzLl9jbG9uZXMubGVuZ3RoK3RoaXMuX2l0ZW1zLmxlbmd0aDthPHRoaXMuc2V0dGluZ3MuaXRlbXMmJmg9PT0hMT8obz1yK3RoaXMuX2l0ZW1zLmxlbmd0aCx0aGlzLnJlc2V0KG8pKTphPj1sLXRoaXMuc2V0dGluZ3MuaXRlbXMmJmg9PT0hMCYmKG89ci10aGlzLl9pdGVtcy5sZW5ndGgsdGhpcy5yZXNldChvKSksZS5jbGVhclRpbWVvdXQodGhpcy5lLl9nb1RvTG9vcCksdGhpcy5lLl9nb1RvTG9vcD1lLnNldFRpbWVvdXQodC5wcm94eShmdW5jdGlvbigpe3RoaXMuc3BlZWQodGhpcy5kdXJhdGlvbih0aGlzLmN1cnJlbnQoKSxvK24scykpLHRoaXMuY3VycmVudChvK24pLHRoaXMudXBkYXRlKCl9LHRoaXMpLDMwKX1lbHNlIHRoaXMuc3BlZWQodGhpcy5kdXJhdGlvbih0aGlzLmN1cnJlbnQoKSxpLHMpKSx0aGlzLmN1cnJlbnQoaSksdGhpcy51cGRhdGUoKX0sbi5wcm90b3R5cGUubmV4dD1mdW5jdGlvbih0KXt0PXR8fCExLHRoaXMudG8odGhpcy5yZWxhdGl2ZSh0aGlzLmN1cnJlbnQoKSkrMSx0KX0sbi5wcm90b3R5cGUucHJldj1mdW5jdGlvbih0KXt0PXR8fCExLHRoaXMudG8odGhpcy5yZWxhdGl2ZSh0aGlzLmN1cnJlbnQoKSktMSx0KX0sbi5wcm90b3R5cGUudHJhbnNpdGlvbkVuZD1mdW5jdGlvbih0KXtyZXR1cm4gdCE9PXMmJih0LnN0b3BQcm9wYWdhdGlvbigpLCh0LnRhcmdldHx8dC5zcmNFbGVtZW50fHx0Lm9yaWdpbmFsVGFyZ2V0KSE9PXRoaXMuJHN0YWdlLmdldCgwKSk/ITE6KHRoaXMuc3RhdGUuaW5Nb3Rpb249ITEsdm9pZCB0aGlzLnRyaWdnZXIoXCJ0cmFuc2xhdGVkXCIpKX0sbi5wcm90b3R5cGUudmlld3BvcnQ9ZnVuY3Rpb24oKXt2YXIgcztpZih0aGlzLm9wdGlvbnMucmVzcG9uc2l2ZUJhc2VFbGVtZW50IT09ZSlzPXQodGhpcy5vcHRpb25zLnJlc3BvbnNpdmVCYXNlRWxlbWVudCkud2lkdGgoKTtlbHNlIGlmKGUuaW5uZXJXaWR0aClzPWUuaW5uZXJXaWR0aDtlbHNle2lmKCFpLmRvY3VtZW50RWxlbWVudHx8IWkuZG9jdW1lbnRFbGVtZW50LmNsaWVudFdpZHRoKXRocm93XCJDYW4gbm90IGRldGVjdCB2aWV3cG9ydCB3aWR0aC5cIjtzPWkuZG9jdW1lbnRFbGVtZW50LmNsaWVudFdpZHRofXJldHVybiBzfSxuLnByb3RvdHlwZS5yZXBsYWNlPWZ1bmN0aW9uKGUpe3RoaXMuJHN0YWdlLmVtcHR5KCksdGhpcy5faXRlbXM9W10sZSYmKGU9ZSBpbnN0YW5jZW9mIGpRdWVyeT9lOnQoZSkpLHRoaXMuc2V0dGluZ3MubmVzdGVkSXRlbVNlbGVjdG9yJiYoZT1lLmZpbmQoXCIuXCIrdGhpcy5zZXR0aW5ncy5uZXN0ZWRJdGVtU2VsZWN0b3IpKSxlLmZpbHRlcihmdW5jdGlvbigpe3JldHVybiAxPT09dGhpcy5ub2RlVHlwZX0pLmVhY2godC5wcm94eShmdW5jdGlvbih0LGUpe2U9dGhpcy5wcmVwYXJlKGUpLHRoaXMuJHN0YWdlLmFwcGVuZChlKSx0aGlzLl9pdGVtcy5wdXNoKGUpLHRoaXMuX21lcmdlcnMucHVzaCgxKmUuZmluZChcIltkYXRhLW1lcmdlXVwiKS5hbmRTZWxmKFwiW2RhdGEtbWVyZ2VdXCIpLmF0dHIoXCJkYXRhLW1lcmdlXCIpfHwxKX0sdGhpcykpLHRoaXMucmVzZXQodC5pc051bWVyaWModGhpcy5zZXR0aW5ncy5zdGFydFBvc2l0aW9uKT90aGlzLnNldHRpbmdzLnN0YXJ0UG9zaXRpb246MCksdGhpcy5pbnZhbGlkYXRlKFwiaXRlbXNcIil9LG4ucHJvdG90eXBlLmFkZD1mdW5jdGlvbih0LGUpe2U9ZT09PXM/dGhpcy5faXRlbXMubGVuZ3RoOnRoaXMubm9ybWFsaXplKGUsITApLHRoaXMudHJpZ2dlcihcImFkZFwiLHtjb250ZW50OnQscG9zaXRpb246ZX0pLDA9PT10aGlzLl9pdGVtcy5sZW5ndGh8fGU9PT10aGlzLl9pdGVtcy5sZW5ndGg/KHRoaXMuJHN0YWdlLmFwcGVuZCh0KSx0aGlzLl9pdGVtcy5wdXNoKHQpLHRoaXMuX21lcmdlcnMucHVzaCgxKnQuZmluZChcIltkYXRhLW1lcmdlXVwiKS5hbmRTZWxmKFwiW2RhdGEtbWVyZ2VdXCIpLmF0dHIoXCJkYXRhLW1lcmdlXCIpfHwxKSk6KHRoaXMuX2l0ZW1zW2VdLmJlZm9yZSh0KSx0aGlzLl9pdGVtcy5zcGxpY2UoZSwwLHQpLHRoaXMuX21lcmdlcnMuc3BsaWNlKGUsMCwxKnQuZmluZChcIltkYXRhLW1lcmdlXVwiKS5hbmRTZWxmKFwiW2RhdGEtbWVyZ2VdXCIpLmF0dHIoXCJkYXRhLW1lcmdlXCIpfHwxKSksdGhpcy5pbnZhbGlkYXRlKFwiaXRlbXNcIiksdGhpcy50cmlnZ2VyKFwiYWRkZWRcIix7Y29udGVudDp0LHBvc2l0aW9uOmV9KX0sbi5wcm90b3R5cGUucmVtb3ZlPWZ1bmN0aW9uKHQpe3Q9dGhpcy5ub3JtYWxpemUodCwhMCksdCE9PXMmJih0aGlzLnRyaWdnZXIoXCJyZW1vdmVcIix7Y29udGVudDp0aGlzLl9pdGVtc1t0XSxwb3NpdGlvbjp0fSksdGhpcy5faXRlbXNbdF0ucmVtb3ZlKCksdGhpcy5faXRlbXMuc3BsaWNlKHQsMSksdGhpcy5fbWVyZ2Vycy5zcGxpY2UodCwxKSx0aGlzLmludmFsaWRhdGUoXCJpdGVtc1wiKSx0aGlzLnRyaWdnZXIoXCJyZW1vdmVkXCIse2NvbnRlbnQ6bnVsbCxwb3NpdGlvbjp0fSkpfSxuLnByb3RvdHlwZS5hZGRUcmlnZ2VyYWJsZUV2ZW50cz1mdW5jdGlvbigpe3ZhciBlPXQucHJveHkoZnVuY3Rpb24oZSxpKXtyZXR1cm4gdC5wcm94eShmdW5jdGlvbih0KXt0LnJlbGF0ZWRUYXJnZXQhPT10aGlzJiYodGhpcy5zdXBwcmVzcyhbaV0pLGUuYXBwbHkodGhpcyxbXS5zbGljZS5jYWxsKGFyZ3VtZW50cywxKSksdGhpcy5yZWxlYXNlKFtpXSkpfSx0aGlzKX0sdGhpcyk7dC5lYWNoKHtuZXh0OnRoaXMubmV4dCxwcmV2OnRoaXMucHJldix0bzp0aGlzLnRvLGRlc3Ryb3k6dGhpcy5kZXN0cm95LHJlZnJlc2g6dGhpcy5yZWZyZXNoLHJlcGxhY2U6dGhpcy5yZXBsYWNlLGFkZDp0aGlzLmFkZCxyZW1vdmU6dGhpcy5yZW1vdmV9LHQucHJveHkoZnVuY3Rpb24odCxpKXt0aGlzLiRlbGVtZW50Lm9uKHQrXCIub3dsLmNhcm91c2VsXCIsZShpLHQrXCIub3dsLmNhcm91c2VsXCIpKX0sdGhpcykpfSxuLnByb3RvdHlwZS53YXRjaFZpc2liaWxpdHk9ZnVuY3Rpb24oKXtmdW5jdGlvbiBpKHQpe3JldHVybiB0Lm9mZnNldFdpZHRoPjAmJnQub2Zmc2V0SGVpZ2h0PjB9ZnVuY3Rpb24gcygpe2kodGhpcy4kZWxlbWVudC5nZXQoMCkpJiYodGhpcy4kZWxlbWVudC5yZW1vdmVDbGFzcyhcIm93bC1oaWRkZW5cIiksdGhpcy5yZWZyZXNoKCksZS5jbGVhckludGVydmFsKHRoaXMuZS5fY2hlY2tWaXNpYmlsZSkpfWkodGhpcy4kZWxlbWVudC5nZXQoMCkpfHwodGhpcy4kZWxlbWVudC5hZGRDbGFzcyhcIm93bC1oaWRkZW5cIiksZS5jbGVhckludGVydmFsKHRoaXMuZS5fY2hlY2tWaXNpYmlsZSksdGhpcy5lLl9jaGVja1Zpc2liaWxlPWUuc2V0SW50ZXJ2YWwodC5wcm94eShzLHRoaXMpLDUwMCkpfSxuLnByb3RvdHlwZS5wcmVsb2FkQXV0b1dpZHRoSW1hZ2VzPWZ1bmN0aW9uKGUpe3ZhciBpLHMsbixvO2k9MCxzPXRoaXMsZS5lYWNoKGZ1bmN0aW9uKHIsYSl7bj10KGEpLG89bmV3IEltYWdlLG8ub25sb2FkPWZ1bmN0aW9uKCl7aSsrLG4uYXR0cihcInNyY1wiLG8uc3JjKSxuLmNzcyhcIm9wYWNpdHlcIiwxKSxpPj1lLmxlbmd0aCYmKHMuc3RhdGUuaW1hZ2VzTG9hZGVkPSEwLHMuaW5pdGlhbGl6ZSgpKX0sby5zcmM9bi5hdHRyKFwic3JjXCIpfHxuLmF0dHIoXCJkYXRhLXNyY1wiKXx8bi5hdHRyKFwiZGF0YS1zcmMtcmV0aW5hXCIpfSl9LG4ucHJvdG90eXBlLmRlc3Ryb3k9ZnVuY3Rpb24oKXt0aGlzLiRlbGVtZW50Lmhhc0NsYXNzKHRoaXMuc2V0dGluZ3MudGhlbWVDbGFzcykmJnRoaXMuJGVsZW1lbnQucmVtb3ZlQ2xhc3ModGhpcy5zZXR0aW5ncy50aGVtZUNsYXNzKSx0aGlzLnNldHRpbmdzLnJlc3BvbnNpdmUhPT0hMSYmdChlKS5vZmYoXCJyZXNpemUub3dsLmNhcm91c2VsXCIpLHRoaXMudHJhbnNpdGlvbkVuZFZlbmRvciYmdGhpcy5vZmYodGhpcy4kc3RhZ2UuZ2V0KDApLHRoaXMudHJhbnNpdGlvbkVuZFZlbmRvcix0aGlzLmUuX3RyYW5zaXRpb25FbmQpO2Zvcih2YXIgcyBpbiB0aGlzLl9wbHVnaW5zKXRoaXMuX3BsdWdpbnNbc10uZGVzdHJveSgpOyh0aGlzLnNldHRpbmdzLm1vdXNlRHJhZ3x8dGhpcy5zZXR0aW5ncy50b3VjaERyYWcpJiYodGhpcy4kc3RhZ2Uub2ZmKFwibW91c2Vkb3duIHRvdWNoc3RhcnQgdG91Y2hjYW5jZWxcIiksdChpKS5vZmYoXCIub3dsLmRyYWdFdmVudHNcIiksdGhpcy4kc3RhZ2UuZ2V0KDApLm9uc2VsZWN0c3RhcnQ9ZnVuY3Rpb24oKXt9LHRoaXMuJHN0YWdlLm9mZihcImRyYWdzdGFydFwiLGZ1bmN0aW9uKCl7cmV0dXJuITF9KSksdGhpcy4kZWxlbWVudC5vZmYoXCIub3dsXCIpLHRoaXMuJHN0YWdlLmNoaWxkcmVuKFwiLmNsb25lZFwiKS5yZW1vdmUoKSx0aGlzLmU9bnVsbCx0aGlzLiRlbGVtZW50LnJlbW92ZURhdGEoXCJvd2xDYXJvdXNlbFwiKSx0aGlzLiRzdGFnZS5jaGlsZHJlbigpLmNvbnRlbnRzKCkudW53cmFwKCksdGhpcy4kc3RhZ2UuY2hpbGRyZW4oKS51bndyYXAoKSx0aGlzLiRzdGFnZS51bndyYXAoKX0sbi5wcm90b3R5cGUub3A9ZnVuY3Rpb24odCxlLGkpe3ZhciBzPXRoaXMuc2V0dGluZ3MucnRsO3N3aXRjaChlKXtjYXNlXCI8XCI6cmV0dXJuIHM/dD5pOmk+dDtjYXNlXCI+XCI6cmV0dXJuIHM/aT50OnQ+aTtjYXNlXCI+PVwiOnJldHVybiBzP2k+PXQ6dD49aTtjYXNlXCI8PVwiOnJldHVybiBzP3Q+PWk6aT49dH19LG4ucHJvdG90eXBlLm9uPWZ1bmN0aW9uKHQsZSxpLHMpe3QuYWRkRXZlbnRMaXN0ZW5lcj90LmFkZEV2ZW50TGlzdGVuZXIoZSxpLHMpOnQuYXR0YWNoRXZlbnQmJnQuYXR0YWNoRXZlbnQoXCJvblwiK2UsaSl9LG4ucHJvdG90eXBlLm9mZj1mdW5jdGlvbih0LGUsaSxzKXt0LnJlbW92ZUV2ZW50TGlzdGVuZXI/dC5yZW1vdmVFdmVudExpc3RlbmVyKGUsaSxzKTp0LmRldGFjaEV2ZW50JiZ0LmRldGFjaEV2ZW50KFwib25cIitlLGkpfSxuLnByb3RvdHlwZS50cmlnZ2VyPWZ1bmN0aW9uKGUsaSxzKXt2YXIgbj17aXRlbTp7Y291bnQ6dGhpcy5faXRlbXMubGVuZ3RoLGluZGV4OnRoaXMuY3VycmVudCgpfX0sbz10LmNhbWVsQ2FzZSh0LmdyZXAoW1wib25cIixlLHNdLGZ1bmN0aW9uKHQpe3JldHVybiB0fSkuam9pbihcIi1cIikudG9Mb3dlckNhc2UoKSkscj10LkV2ZW50KFtlLFwib3dsXCIsc3x8XCJjYXJvdXNlbFwiXS5qb2luKFwiLlwiKS50b0xvd2VyQ2FzZSgpLHQuZXh0ZW5kKHtyZWxhdGVkVGFyZ2V0OnRoaXN9LG4saSkpO3JldHVybiB0aGlzLl9zdXByZXNzW2VdfHwodC5lYWNoKHRoaXMuX3BsdWdpbnMsZnVuY3Rpb24odCxlKXtlLm9uVHJpZ2dlciYmZS5vblRyaWdnZXIocil9KSx0aGlzLiRlbGVtZW50LnRyaWdnZXIociksdGhpcy5zZXR0aW5ncyYmXCJmdW5jdGlvblwiPT10eXBlb2YgdGhpcy5zZXR0aW5nc1tvXSYmdGhpcy5zZXR0aW5nc1tvXS5hcHBseSh0aGlzLHIpKSxyfSxuLnByb3RvdHlwZS5zdXBwcmVzcz1mdW5jdGlvbihlKXt0LmVhY2goZSx0LnByb3h5KGZ1bmN0aW9uKHQsZSl7dGhpcy5fc3VwcmVzc1tlXT0hMH0sdGhpcykpfSxuLnByb3RvdHlwZS5yZWxlYXNlPWZ1bmN0aW9uKGUpe3QuZWFjaChlLHQucHJveHkoZnVuY3Rpb24odCxlKXtkZWxldGUgdGhpcy5fc3VwcmVzc1tlXX0sdGhpcykpfSxuLnByb3RvdHlwZS5icm93c2VyU3VwcG9ydD1mdW5jdGlvbigpe2lmKHRoaXMuc3VwcG9ydDNkPWwoKSx0aGlzLnN1cHBvcnQzZCl7dGhpcy50cmFuc2Zvcm1WZW5kb3I9aCgpO3ZhciB0PVtcInRyYW5zaXRpb25lbmRcIixcIndlYmtpdFRyYW5zaXRpb25FbmRcIixcInRyYW5zaXRpb25lbmRcIixcIm9UcmFuc2l0aW9uRW5kXCJdO3RoaXMudHJhbnNpdGlvbkVuZFZlbmRvcj10W2EoKV0sdGhpcy52ZW5kb3JOYW1lPXRoaXMudHJhbnNmb3JtVmVuZG9yLnJlcGxhY2UoL1RyYW5zZm9ybS9pLFwiXCIpLHRoaXMudmVuZG9yTmFtZT1cIlwiIT09dGhpcy52ZW5kb3JOYW1lP1wiLVwiK3RoaXMudmVuZG9yTmFtZS50b0xvd2VyQ2FzZSgpK1wiLVwiOlwiXCJ9dGhpcy5zdGF0ZS5vcmllbnRhdGlvbj1lLm9yaWVudGF0aW9ufSx0LmZuLm93bENhcm91c2VsPWZ1bmN0aW9uKGUpe3JldHVybiB0aGlzLmVhY2goZnVuY3Rpb24oKXt0KHRoaXMpLmRhdGEoXCJvd2xDYXJvdXNlbFwiKXx8dCh0aGlzKS5kYXRhKFwib3dsQ2Fyb3VzZWxcIixuZXcgbih0aGlzLGUpKX0pfSx0LmZuLm93bENhcm91c2VsLkNvbnN0cnVjdG9yPW59KHdpbmRvdy5aZXB0b3x8d2luZG93LmpRdWVyeSx3aW5kb3csZG9jdW1lbnQpLGZ1bmN0aW9uKHQsZSxpLHMpe3ZhciBuPWZ1bmN0aW9uKGUpe3RoaXMuX2NvcmU9ZSx0aGlzLl9sb2FkZWQ9W10sdGhpcy5faGFuZGxlcnM9e1wiaW5pdGlhbGl6ZWQub3dsLmNhcm91c2VsIGNoYW5nZS5vd2wuY2Fyb3VzZWxcIjp0LnByb3h5KGZ1bmN0aW9uKGUpe2lmKGUubmFtZXNwYWNlJiZ0aGlzLl9jb3JlLnNldHRpbmdzJiZ0aGlzLl9jb3JlLnNldHRpbmdzLmxhenlMb2FkJiYoZS5wcm9wZXJ0eSYmXCJwb3NpdGlvblwiPT1lLnByb3BlcnR5Lm5hbWV8fFwiaW5pdGlhbGl6ZWRcIj09ZS50eXBlKSlmb3IodmFyIGk9dGhpcy5fY29yZS5zZXR0aW5ncyxzPWkuY2VudGVyJiZNYXRoLmNlaWwoaS5pdGVtcy8yKXx8aS5pdGVtcyxuPWkuY2VudGVyJiYtMSpzfHwwLG89KGUucHJvcGVydHkmJmUucHJvcGVydHkudmFsdWV8fHRoaXMuX2NvcmUuY3VycmVudCgpKStuLHI9dGhpcy5fY29yZS5jbG9uZXMoKS5sZW5ndGgsYT10LnByb3h5KGZ1bmN0aW9uKHQsZSl7dGhpcy5sb2FkKGUpfSx0aGlzKTtuKys8czspdGhpcy5sb2FkKHIvMit0aGlzLl9jb3JlLnJlbGF0aXZlKG8pKSxyJiZ0LmVhY2godGhpcy5fY29yZS5jbG9uZXModGhpcy5fY29yZS5yZWxhdGl2ZShvKyspKSxhKX0sdGhpcyl9LHRoaXMuX2NvcmUub3B0aW9ucz10LmV4dGVuZCh7fSxuLkRlZmF1bHRzLHRoaXMuX2NvcmUub3B0aW9ucyksdGhpcy5fY29yZS4kZWxlbWVudC5vbih0aGlzLl9oYW5kbGVycyl9O24uRGVmYXVsdHM9e2xhenlMb2FkOiExfSxuLnByb3RvdHlwZS5sb2FkPWZ1bmN0aW9uKGkpe3ZhciBzPXRoaXMuX2NvcmUuJHN0YWdlLmNoaWxkcmVuKCkuZXEoaSksbj1zJiZzLmZpbmQoXCIub3dsLWxhenlcIik7IW58fHQuaW5BcnJheShzLmdldCgwKSx0aGlzLl9sb2FkZWQpPi0xfHwobi5lYWNoKHQucHJveHkoZnVuY3Rpb24oaSxzKXt2YXIgbixvPXQocykscj1lLmRldmljZVBpeGVsUmF0aW8+MSYmby5hdHRyKFwiZGF0YS1zcmMtcmV0aW5hXCIpfHxvLmF0dHIoXCJkYXRhLXNyY1wiKTt0aGlzLl9jb3JlLnRyaWdnZXIoXCJsb2FkXCIse2VsZW1lbnQ6byx1cmw6cn0sXCJsYXp5XCIpLG8uaXMoXCJpbWdcIik/by5vbmUoXCJsb2FkLm93bC5sYXp5XCIsdC5wcm94eShmdW5jdGlvbigpe28uY3NzKFwib3BhY2l0eVwiLDEpLHRoaXMuX2NvcmUudHJpZ2dlcihcImxvYWRlZFwiLHtlbGVtZW50Om8sdXJsOnJ9LFwibGF6eVwiKX0sdGhpcykpLmF0dHIoXCJzcmNcIixyKToobj1uZXcgSW1hZ2Usbi5vbmxvYWQ9dC5wcm94eShmdW5jdGlvbigpe28uY3NzKHtcImJhY2tncm91bmQtaW1hZ2VcIjpcInVybChcIityK1wiKVwiLG9wYWNpdHk6XCIxXCJ9KSx0aGlzLl9jb3JlLnRyaWdnZXIoXCJsb2FkZWRcIix7ZWxlbWVudDpvLHVybDpyfSxcImxhenlcIil9LHRoaXMpLG4uc3JjPXIpfSx0aGlzKSksdGhpcy5fbG9hZGVkLnB1c2gocy5nZXQoMCkpKX0sbi5wcm90b3R5cGUuZGVzdHJveT1mdW5jdGlvbigpe3ZhciB0LGU7Zm9yKHQgaW4gdGhpcy5oYW5kbGVycyl0aGlzLl9jb3JlLiRlbGVtZW50Lm9mZih0LHRoaXMuaGFuZGxlcnNbdF0pO2ZvcihlIGluIE9iamVjdC5nZXRPd25Qcm9wZXJ0eU5hbWVzKHRoaXMpKVwiZnVuY3Rpb25cIiE9dHlwZW9mIHRoaXNbZV0mJih0aGlzW2VdPW51bGwpfSx0LmZuLm93bENhcm91c2VsLkNvbnN0cnVjdG9yLlBsdWdpbnMuTGF6eT1ufSh3aW5kb3cuWmVwdG98fHdpbmRvdy5qUXVlcnksd2luZG93LGRvY3VtZW50KSxmdW5jdGlvbih0LGUsaSxzKXt2YXIgbj1mdW5jdGlvbihlKXt0aGlzLl9jb3JlPWUsdGhpcy5faGFuZGxlcnM9e1wiaW5pdGlhbGl6ZWQub3dsLmNhcm91c2VsXCI6dC5wcm94eShmdW5jdGlvbigpe3RoaXMuX2NvcmUuc2V0dGluZ3MuYXV0b0hlaWdodCYmdGhpcy51cGRhdGUoKX0sdGhpcyksXCJjaGFuZ2VkLm93bC5jYXJvdXNlbFwiOnQucHJveHkoZnVuY3Rpb24odCl7dGhpcy5fY29yZS5zZXR0aW5ncy5hdXRvSGVpZ2h0JiZcInBvc2l0aW9uXCI9PXQucHJvcGVydHkubmFtZSYmdGhpcy51cGRhdGUoKX0sdGhpcyksXCJsb2FkZWQub3dsLmxhenlcIjp0LnByb3h5KGZ1bmN0aW9uKHQpe3RoaXMuX2NvcmUuc2V0dGluZ3MuYXV0b0hlaWdodCYmdC5lbGVtZW50LmNsb3Nlc3QoXCIuXCIrdGhpcy5fY29yZS5zZXR0aW5ncy5pdGVtQ2xhc3MpPT09dGhpcy5fY29yZS4kc3RhZ2UuY2hpbGRyZW4oKS5lcSh0aGlzLl9jb3JlLmN1cnJlbnQoKSkmJnRoaXMudXBkYXRlKCl9LHRoaXMpfSx0aGlzLl9jb3JlLm9wdGlvbnM9dC5leHRlbmQoe30sbi5EZWZhdWx0cyx0aGlzLl9jb3JlLm9wdGlvbnMpLHRoaXMuX2NvcmUuJGVsZW1lbnQub24odGhpcy5faGFuZGxlcnMpfTtuLkRlZmF1bHRzPXthdXRvSGVpZ2h0OiExLGF1dG9IZWlnaHRDbGFzczpcIm93bC1oZWlnaHRcIn0sbi5wcm90b3R5cGUudXBkYXRlPWZ1bmN0aW9uKCl7dGhpcy5fY29yZS4kc3RhZ2UucGFyZW50KCkuaGVpZ2h0KHRoaXMuX2NvcmUuJHN0YWdlLmNoaWxkcmVuKCkuZXEodGhpcy5fY29yZS5jdXJyZW50KCkpLmhlaWdodCgpKS5hZGRDbGFzcyh0aGlzLl9jb3JlLnNldHRpbmdzLmF1dG9IZWlnaHRDbGFzcyl9LG4ucHJvdG90eXBlLmRlc3Ryb3k9ZnVuY3Rpb24oKXt2YXIgdCxlO2Zvcih0IGluIHRoaXMuX2hhbmRsZXJzKXRoaXMuX2NvcmUuJGVsZW1lbnQub2ZmKHQsdGhpcy5faGFuZGxlcnNbdF0pO2ZvcihlIGluIE9iamVjdC5nZXRPd25Qcm9wZXJ0eU5hbWVzKHRoaXMpKVwiZnVuY3Rpb25cIiE9dHlwZW9mIHRoaXNbZV0mJih0aGlzW2VdPW51bGwpfSx0LmZuLm93bENhcm91c2VsLkNvbnN0cnVjdG9yLlBsdWdpbnMuQXV0b0hlaWdodD1ufSh3aW5kb3cuWmVwdG98fHdpbmRvdy5qUXVlcnksd2luZG93LGRvY3VtZW50KSxmdW5jdGlvbih0LGUsaSxzKXt2YXIgbj1mdW5jdGlvbihlKXt0aGlzLl9jb3JlPWUsdGhpcy5fdmlkZW9zPXt9LHRoaXMuX3BsYXlpbmc9bnVsbCx0aGlzLl9mdWxsc2NyZWVuPSExLHRoaXMuX2hhbmRsZXJzPXtcInJlc2l6ZS5vd2wuY2Fyb3VzZWxcIjp0LnByb3h5KGZ1bmN0aW9uKHQpe3RoaXMuX2NvcmUuc2V0dGluZ3MudmlkZW8mJiF0aGlzLmlzSW5GdWxsU2NyZWVuKCkmJnQucHJldmVudERlZmF1bHQoKX0sdGhpcyksXCJyZWZyZXNoLm93bC5jYXJvdXNlbCBjaGFuZ2VkLm93bC5jYXJvdXNlbFwiOnQucHJveHkoZnVuY3Rpb24odCl7dGhpcy5fcGxheWluZyYmdGhpcy5zdG9wKCl9LHRoaXMpLFwicHJlcGFyZWQub3dsLmNhcm91c2VsXCI6dC5wcm94eShmdW5jdGlvbihlKXt2YXIgaT10KGUuY29udGVudCkuZmluZChcIi5vd2wtdmlkZW9cIik7aS5sZW5ndGgmJihpLmNzcyhcImRpc3BsYXlcIixcIm5vbmVcIiksdGhpcy5mZXRjaChpLHQoZS5jb250ZW50KSkpfSx0aGlzKX0sdGhpcy5fY29yZS5vcHRpb25zPXQuZXh0ZW5kKHt9LG4uRGVmYXVsdHMsdGhpcy5fY29yZS5vcHRpb25zKSx0aGlzLl9jb3JlLiRlbGVtZW50Lm9uKHRoaXMuX2hhbmRsZXJzKSx0aGlzLl9jb3JlLiRlbGVtZW50Lm9uKFwiY2xpY2sub3dsLnZpZGVvXCIsXCIub3dsLXZpZGVvLXBsYXktaWNvblwiLHQucHJveHkoZnVuY3Rpb24odCl7dGhpcy5wbGF5KHQpfSx0aGlzKSl9O24uRGVmYXVsdHM9e3ZpZGVvOiExLHZpZGVvSGVpZ2h0OiExLHZpZGVvV2lkdGg6ITF9LG4ucHJvdG90eXBlLmZldGNoPWZ1bmN0aW9uKHQsZSl7dmFyIGk9dC5hdHRyKFwiZGF0YS12aW1lby1pZFwiKT9cInZpbWVvXCI6XCJ5b3V0dWJlXCIscz10LmF0dHIoXCJkYXRhLXZpbWVvLWlkXCIpfHx0LmF0dHIoXCJkYXRhLXlvdXR1YmUtaWRcIiksbj10LmF0dHIoXCJkYXRhLXdpZHRoXCIpfHx0aGlzLl9jb3JlLnNldHRpbmdzLnZpZGVvV2lkdGgsbz10LmF0dHIoXCJkYXRhLWhlaWdodFwiKXx8dGhpcy5fY29yZS5zZXR0aW5ncy52aWRlb0hlaWdodCxyPXQuYXR0cihcImhyZWZcIik7aWYoIXIpdGhyb3cgbmV3IEVycm9yKFwiTWlzc2luZyB2aWRlbyBVUkwuXCIpO2lmKHM9ci5tYXRjaCgvKGh0dHA6fGh0dHBzOnwpXFwvXFwvKHBsYXllci58d3d3Lik/KHZpbWVvXFwuY29tfHlvdXR1KGJlXFwuY29tfFxcLmJlfGJlXFwuZ29vZ2xlYXBpc1xcLmNvbSkpXFwvKHZpZGVvXFwvfGVtYmVkXFwvfHdhdGNoXFw/dj18dlxcLyk/KFtBLVphLXowLTkuXyUtXSopKFxcJlxcUyspPy8pLHNbM10uaW5kZXhPZihcInlvdXR1XCIpPi0xKWk9XCJ5b3V0dWJlXCI7ZWxzZXtpZighKHNbM10uaW5kZXhPZihcInZpbWVvXCIpPi0xKSl0aHJvdyBuZXcgRXJyb3IoXCJWaWRlbyBVUkwgbm90IHN1cHBvcnRlZC5cIik7aT1cInZpbWVvXCJ9cz1zWzZdLHRoaXMuX3ZpZGVvc1tyXT17dHlwZTppLGlkOnMsd2lkdGg6bixoZWlnaHQ6b30sZS5hdHRyKFwiZGF0YS12aWRlb1wiLHIpLHRoaXMudGh1bWJuYWlsKHQsdGhpcy5fdmlkZW9zW3JdKX0sbi5wcm90b3R5cGUudGh1bWJuYWlsPWZ1bmN0aW9uKGUsaSl7dmFyIHMsbixvLHI9aS53aWR0aCYmaS5oZWlnaHQ/J3N0eWxlPVwid2lkdGg6JytpLndpZHRoK1wicHg7aGVpZ2h0OlwiK2kuaGVpZ2h0KydweDtcIic6XCJcIixhPWUuZmluZChcImltZ1wiKSxoPVwic3JjXCIsbD1cIlwiLGM9dGhpcy5fY29yZS5zZXR0aW5ncyxkPWZ1bmN0aW9uKHQpe249JzxkaXYgY2xhc3M9XCJvd2wtdmlkZW8tcGxheS1pY29uXCI+PC9kaXY+JyxzPWMubGF6eUxvYWQ/JzxkaXYgY2xhc3M9XCJvd2wtdmlkZW8tdG4gJytsKydcIiAnK2grJz1cIicrdCsnXCI+PC9kaXY+JzonPGRpdiBjbGFzcz1cIm93bC12aWRlby10blwiIHN0eWxlPVwib3BhY2l0eToxO2JhY2tncm91bmQtaW1hZ2U6dXJsKCcrdCsnKVwiPjwvZGl2PicsZS5hZnRlcihzKSxlLmFmdGVyKG4pfTtyZXR1cm4gZS53cmFwKCc8ZGl2IGNsYXNzPVwib3dsLXZpZGVvLXdyYXBwZXJcIicrcitcIj48L2Rpdj5cIiksdGhpcy5fY29yZS5zZXR0aW5ncy5sYXp5TG9hZCYmKGg9XCJkYXRhLXNyY1wiLGw9XCJvd2wtbGF6eVwiKSxhLmxlbmd0aD8oZChhLmF0dHIoaCkpLGEucmVtb3ZlKCksITEpOnZvaWQoXCJ5b3V0dWJlXCI9PT1pLnR5cGU/KG89XCJodHRwOi8vaW1nLnlvdXR1YmUuY29tL3ZpL1wiK2kuaWQrXCIvaHFkZWZhdWx0LmpwZ1wiLGQobykpOlwidmltZW9cIj09PWkudHlwZSYmdC5hamF4KHt0eXBlOlwiR0VUXCIsdXJsOlwiaHR0cDovL3ZpbWVvLmNvbS9hcGkvdjIvdmlkZW8vXCIraS5pZCtcIi5qc29uXCIsanNvbnA6XCJjYWxsYmFja1wiLGRhdGFUeXBlOlwianNvbnBcIixzdWNjZXNzOmZ1bmN0aW9uKHQpe289dFswXS50aHVtYm5haWxfbGFyZ2UsZChvKX19KSl9LG4ucHJvdG90eXBlLnN0b3A9ZnVuY3Rpb24oKXt0aGlzLl9jb3JlLnRyaWdnZXIoXCJzdG9wXCIsbnVsbCxcInZpZGVvXCIpLHRoaXMuX3BsYXlpbmcuZmluZChcIi5vd2wtdmlkZW8tZnJhbWVcIikucmVtb3ZlKCksdGhpcy5fcGxheWluZy5yZW1vdmVDbGFzcyhcIm93bC12aWRlby1wbGF5aW5nXCIpLHRoaXMuX3BsYXlpbmc9bnVsbH0sbi5wcm90b3R5cGUucGxheT1mdW5jdGlvbihlKXt0aGlzLl9jb3JlLnRyaWdnZXIoXCJwbGF5XCIsbnVsbCxcInZpZGVvXCIpLHRoaXMuX3BsYXlpbmcmJnRoaXMuc3RvcCgpO3ZhciBpLHMsbj10KGUudGFyZ2V0fHxlLnNyY0VsZW1lbnQpLG89bi5jbG9zZXN0KFwiLlwiK3RoaXMuX2NvcmUuc2V0dGluZ3MuaXRlbUNsYXNzKSxyPXRoaXMuX3ZpZGVvc1tvLmF0dHIoXCJkYXRhLXZpZGVvXCIpXSxhPXIud2lkdGh8fFwiMTAwJVwiLGg9ci5oZWlnaHR8fHRoaXMuX2NvcmUuJHN0YWdlLmhlaWdodCgpO1wieW91dHViZVwiPT09ci50eXBlP2k9JzxpZnJhbWUgd2lkdGg9XCInK2ErJ1wiIGhlaWdodD1cIicraCsnXCIgc3JjPVwiaHR0cDovL3d3dy55b3V0dWJlLmNvbS9lbWJlZC8nK3IuaWQrXCI/YXV0b3BsYXk9MSZ2PVwiK3IuaWQrJ1wiIGZyYW1lYm9yZGVyPVwiMFwiIGFsbG93ZnVsbHNjcmVlbj48L2lmcmFtZT4nOlwidmltZW9cIj09PXIudHlwZSYmKGk9JzxpZnJhbWUgc3JjPVwiaHR0cDovL3BsYXllci52aW1lby5jb20vdmlkZW8vJytyLmlkKyc/YXV0b3BsYXk9MVwiIHdpZHRoPVwiJythKydcIiBoZWlnaHQ9XCInK2grJ1wiIGZyYW1lYm9yZGVyPVwiMFwiIHdlYmtpdGFsbG93ZnVsbHNjcmVlbiBtb3phbGxvd2Z1bGxzY3JlZW4gYWxsb3dmdWxsc2NyZWVuPjwvaWZyYW1lPicpLG8uYWRkQ2xhc3MoXCJvd2wtdmlkZW8tcGxheWluZ1wiKSx0aGlzLl9wbGF5aW5nPW8scz10KCc8ZGl2IHN0eWxlPVwiaGVpZ2h0OicraCtcInB4OyB3aWR0aDpcIithKydweFwiIGNsYXNzPVwib3dsLXZpZGVvLWZyYW1lXCI+JytpK1wiPC9kaXY+XCIpLG4uYWZ0ZXIocyl9LG4ucHJvdG90eXBlLmlzSW5GdWxsU2NyZWVuPWZ1bmN0aW9uKCl7dmFyIHM9aS5mdWxsc2NyZWVuRWxlbWVudHx8aS5tb3pGdWxsU2NyZWVuRWxlbWVudHx8aS53ZWJraXRGdWxsc2NyZWVuRWxlbWVudDtyZXR1cm4gcyYmdChzKS5wYXJlbnQoKS5oYXNDbGFzcyhcIm93bC12aWRlby1mcmFtZVwiKSYmKHRoaXMuX2NvcmUuc3BlZWQoMCksdGhpcy5fZnVsbHNjcmVlbj0hMCkscyYmdGhpcy5fZnVsbHNjcmVlbiYmdGhpcy5fcGxheWluZz8hMTp0aGlzLl9mdWxsc2NyZWVuPyh0aGlzLl9mdWxsc2NyZWVuPSExLCExKTp0aGlzLl9wbGF5aW5nJiZ0aGlzLl9jb3JlLnN0YXRlLm9yaWVudGF0aW9uIT09ZS5vcmllbnRhdGlvbj8odGhpcy5fY29yZS5zdGF0ZS5vcmllbnRhdGlvbj1lLm9yaWVudGF0aW9uLCExKTohMH0sbi5wcm90b3R5cGUuZGVzdHJveT1mdW5jdGlvbigpe3ZhciB0LGU7dGhpcy5fY29yZS4kZWxlbWVudC5vZmYoXCJjbGljay5vd2wudmlkZW9cIik7Zm9yKHQgaW4gdGhpcy5faGFuZGxlcnMpdGhpcy5fY29yZS4kZWxlbWVudC5vZmYodCx0aGlzLl9oYW5kbGVyc1t0XSk7Zm9yKGUgaW4gT2JqZWN0LmdldE93blByb3BlcnR5TmFtZXModGhpcykpXCJmdW5jdGlvblwiIT10eXBlb2YgdGhpc1tlXSYmKHRoaXNbZV09bnVsbCl9LHQuZm4ub3dsQ2Fyb3VzZWwuQ29uc3RydWN0b3IuUGx1Z2lucy5WaWRlbz1ufSh3aW5kb3cuWmVwdG98fHdpbmRvdy5qUXVlcnksd2luZG93LGRvY3VtZW50KSxmdW5jdGlvbih0LGUsaSxzKXt2YXIgbj1mdW5jdGlvbihlKXt0aGlzLmNvcmU9ZSx0aGlzLmNvcmUub3B0aW9ucz10LmV4dGVuZCh7fSxuLkRlZmF1bHRzLHRoaXMuY29yZS5vcHRpb25zKSx0aGlzLnN3YXBwaW5nPSEwLHRoaXMucHJldmlvdXM9cyx0aGlzLm5leHQ9cyx0aGlzLmhhbmRsZXJzPXtcImNoYW5nZS5vd2wuY2Fyb3VzZWxcIjp0LnByb3h5KGZ1bmN0aW9uKHQpe1wicG9zaXRpb25cIj09dC5wcm9wZXJ0eS5uYW1lJiYodGhpcy5wcmV2aW91cz10aGlzLmNvcmUuY3VycmVudCgpLHRoaXMubmV4dD10LnByb3BlcnR5LnZhbHVlKX0sdGhpcyksXCJkcmFnLm93bC5jYXJvdXNlbCBkcmFnZ2VkLm93bC5jYXJvdXNlbCB0cmFuc2xhdGVkLm93bC5jYXJvdXNlbFwiOnQucHJveHkoZnVuY3Rpb24odCl7dGhpcy5zd2FwcGluZz1cInRyYW5zbGF0ZWRcIj09dC50eXBlfSx0aGlzKSxcInRyYW5zbGF0ZS5vd2wuY2Fyb3VzZWxcIjp0LnByb3h5KGZ1bmN0aW9uKHQpe3RoaXMuc3dhcHBpbmcmJih0aGlzLmNvcmUub3B0aW9ucy5hbmltYXRlT3V0fHx0aGlzLmNvcmUub3B0aW9ucy5hbmltYXRlSW4pJiZ0aGlzLnN3YXAoKX0sdGhpcyl9LHRoaXMuY29yZS4kZWxlbWVudC5vbih0aGlzLmhhbmRsZXJzKX07bi5EZWZhdWx0cz17YW5pbWF0ZU91dDohMSxhbmltYXRlSW46ITF9LG4ucHJvdG90eXBlLnN3YXA9ZnVuY3Rpb24oKXtpZigxPT09dGhpcy5jb3JlLnNldHRpbmdzLml0ZW1zJiZ0aGlzLmNvcmUuc3VwcG9ydDNkKXt0aGlzLmNvcmUuc3BlZWQoMCk7dmFyIGUsaT10LnByb3h5KHRoaXMuY2xlYXIsdGhpcykscz10aGlzLmNvcmUuJHN0YWdlLmNoaWxkcmVuKCkuZXEodGhpcy5wcmV2aW91cyksbj10aGlzLmNvcmUuJHN0YWdlLmNoaWxkcmVuKCkuZXEodGhpcy5uZXh0KSxvPXRoaXMuY29yZS5zZXR0aW5ncy5hbmltYXRlSW4scj10aGlzLmNvcmUuc2V0dGluZ3MuYW5pbWF0ZU91dDt0aGlzLmNvcmUuY3VycmVudCgpIT09dGhpcy5wcmV2aW91cyYmKHImJihlPXRoaXMuY29yZS5jb29yZGluYXRlcyh0aGlzLnByZXZpb3VzKS10aGlzLmNvcmUuY29vcmRpbmF0ZXModGhpcy5uZXh0KSxzLmNzcyh7bGVmdDplK1wicHhcIn0pLmFkZENsYXNzKFwiYW5pbWF0ZWQgb3dsLWFuaW1hdGVkLW91dFwiKS5hZGRDbGFzcyhyKS5vbmUoXCJ3ZWJraXRBbmltYXRpb25FbmQgbW96QW5pbWF0aW9uRW5kIE1TQW5pbWF0aW9uRW5kIG9hbmltYXRpb25lbmQgYW5pbWF0aW9uZW5kXCIsaSkpLG8mJm4uYWRkQ2xhc3MoXCJhbmltYXRlZCBvd2wtYW5pbWF0ZWQtaW5cIikuYWRkQ2xhc3Mobykub25lKFwid2Via2l0QW5pbWF0aW9uRW5kIG1vekFuaW1hdGlvbkVuZCBNU0FuaW1hdGlvbkVuZCBvYW5pbWF0aW9uZW5kIGFuaW1hdGlvbmVuZFwiLGkpKX19LG4ucHJvdG90eXBlLmNsZWFyPWZ1bmN0aW9uKGUpe3QoZS50YXJnZXQpLmNzcyh7bGVmdDpcIlwifSkucmVtb3ZlQ2xhc3MoXCJhbmltYXRlZCBvd2wtYW5pbWF0ZWQtb3V0IG93bC1hbmltYXRlZC1pblwiKS5yZW1vdmVDbGFzcyh0aGlzLmNvcmUuc2V0dGluZ3MuYW5pbWF0ZUluKS5yZW1vdmVDbGFzcyh0aGlzLmNvcmUuc2V0dGluZ3MuYW5pbWF0ZU91dCksdGhpcy5jb3JlLnRyYW5zaXRpb25FbmQoKX0sbi5wcm90b3R5cGUuZGVzdHJveT1mdW5jdGlvbigpe3ZhciB0LGU7Zm9yKHQgaW4gdGhpcy5oYW5kbGVycyl0aGlzLmNvcmUuJGVsZW1lbnQub2ZmKHQsdGhpcy5oYW5kbGVyc1t0XSk7Zm9yKGUgaW4gT2JqZWN0LmdldE93blByb3BlcnR5TmFtZXModGhpcykpXCJmdW5jdGlvblwiIT10eXBlb2YgdGhpc1tlXSYmKHRoaXNbZV09bnVsbCl9LHQuZm4ub3dsQ2Fyb3VzZWwuQ29uc3RydWN0b3IuUGx1Z2lucy5BbmltYXRlPW59KHdpbmRvdy5aZXB0b3x8d2luZG93LmpRdWVyeSx3aW5kb3csZG9jdW1lbnQpLGZ1bmN0aW9uKHQsZSxpLHMpe3ZhciBuPWZ1bmN0aW9uKGUpe3RoaXMuY29yZT1lLHRoaXMuY29yZS5vcHRpb25zPXQuZXh0ZW5kKHt9LG4uRGVmYXVsdHMsdGhpcy5jb3JlLm9wdGlvbnMpLFxyXG4gICAgdGhpcy5oYW5kbGVycz17XCJ0cmFuc2xhdGVkLm93bC5jYXJvdXNlbCByZWZyZXNoZWQub3dsLmNhcm91c2VsXCI6dC5wcm94eShmdW5jdGlvbigpe3RoaXMuYXV0b3BsYXkoKX0sdGhpcyksXCJwbGF5Lm93bC5hdXRvcGxheVwiOnQucHJveHkoZnVuY3Rpb24odCxlLGkpe3RoaXMucGxheShlLGkpfSx0aGlzKSxcInN0b3Aub3dsLmF1dG9wbGF5XCI6dC5wcm94eShmdW5jdGlvbigpe3RoaXMuc3RvcCgpfSx0aGlzKSxcIm1vdXNlb3Zlci5vd2wuYXV0b3BsYXlcIjp0LnByb3h5KGZ1bmN0aW9uKCl7dGhpcy5jb3JlLnNldHRpbmdzLmF1dG9wbGF5SG92ZXJQYXVzZSYmdGhpcy5wYXVzZSgpfSx0aGlzKSxcIm1vdXNlbGVhdmUub3dsLmF1dG9wbGF5XCI6dC5wcm94eShmdW5jdGlvbigpe3RoaXMuY29yZS5zZXR0aW5ncy5hdXRvcGxheUhvdmVyUGF1c2UmJnRoaXMuYXV0b3BsYXkoKX0sdGhpcyl9LHRoaXMuY29yZS4kZWxlbWVudC5vbih0aGlzLmhhbmRsZXJzKX07bi5EZWZhdWx0cz17YXV0b3BsYXk6ITEsYXV0b3BsYXlUaW1lb3V0OjVlMyxhdXRvcGxheUhvdmVyUGF1c2U6ITEsYXV0b3BsYXlTcGVlZDohMX0sbi5wcm90b3R5cGUuYXV0b3BsYXk9ZnVuY3Rpb24oKXt0aGlzLmNvcmUuc2V0dGluZ3MuYXV0b3BsYXkmJiF0aGlzLmNvcmUuc3RhdGUudmlkZW9QbGF5PyhlLmNsZWFySW50ZXJ2YWwodGhpcy5pbnRlcnZhbCksdGhpcy5pbnRlcnZhbD1lLnNldEludGVydmFsKHQucHJveHkoZnVuY3Rpb24oKXt0aGlzLnBsYXkoKX0sdGhpcyksdGhpcy5jb3JlLnNldHRpbmdzLmF1dG9wbGF5VGltZW91dCkpOmUuY2xlYXJJbnRlcnZhbCh0aGlzLmludGVydmFsKX0sbi5wcm90b3R5cGUucGxheT1mdW5jdGlvbih0LHMpe3JldHVybiBpLmhpZGRlbj09PSEwfHx0aGlzLmNvcmUuc3RhdGUuaXNUb3VjaHx8dGhpcy5jb3JlLnN0YXRlLmlzU2Nyb2xsaW5nfHx0aGlzLmNvcmUuc3RhdGUuaXNTd2lwaW5nfHx0aGlzLmNvcmUuc3RhdGUuaW5Nb3Rpb24/dm9pZCAwOnRoaXMuY29yZS5zZXR0aW5ncy5hdXRvcGxheT09PSExP3ZvaWQgZS5jbGVhckludGVydmFsKHRoaXMuaW50ZXJ2YWwpOnZvaWQgdGhpcy5jb3JlLm5leHQodGhpcy5jb3JlLnNldHRpbmdzLmF1dG9wbGF5U3BlZWQpfSxuLnByb3RvdHlwZS5zdG9wPWZ1bmN0aW9uKCl7ZS5jbGVhckludGVydmFsKHRoaXMuaW50ZXJ2YWwpfSxuLnByb3RvdHlwZS5wYXVzZT1mdW5jdGlvbigpe2UuY2xlYXJJbnRlcnZhbCh0aGlzLmludGVydmFsKX0sbi5wcm90b3R5cGUuZGVzdHJveT1mdW5jdGlvbigpe3ZhciB0LGk7ZS5jbGVhckludGVydmFsKHRoaXMuaW50ZXJ2YWwpO2Zvcih0IGluIHRoaXMuaGFuZGxlcnMpdGhpcy5jb3JlLiRlbGVtZW50Lm9mZih0LHRoaXMuaGFuZGxlcnNbdF0pO2ZvcihpIGluIE9iamVjdC5nZXRPd25Qcm9wZXJ0eU5hbWVzKHRoaXMpKVwiZnVuY3Rpb25cIiE9dHlwZW9mIHRoaXNbaV0mJih0aGlzW2ldPW51bGwpfSx0LmZuLm93bENhcm91c2VsLkNvbnN0cnVjdG9yLlBsdWdpbnMuYXV0b3BsYXk9bn0od2luZG93LlplcHRvfHx3aW5kb3cualF1ZXJ5LHdpbmRvdyxkb2N1bWVudCksZnVuY3Rpb24odCxlLGkscyl7XCJ1c2Ugc3RyaWN0XCI7dmFyIG49ZnVuY3Rpb24oZSl7dGhpcy5fY29yZT1lLHRoaXMuX2luaXRpYWxpemVkPSExLHRoaXMuX3BhZ2VzPVtdLHRoaXMuX2NvbnRyb2xzPXt9LHRoaXMuX3RlbXBsYXRlcz1bXSx0aGlzLiRlbGVtZW50PXRoaXMuX2NvcmUuJGVsZW1lbnQsdGhpcy5fb3ZlcnJpZGVzPXtuZXh0OnRoaXMuX2NvcmUubmV4dCxwcmV2OnRoaXMuX2NvcmUucHJldix0bzp0aGlzLl9jb3JlLnRvfSx0aGlzLl9oYW5kbGVycz17XCJwcmVwYXJlZC5vd2wuY2Fyb3VzZWxcIjp0LnByb3h5KGZ1bmN0aW9uKGUpe3RoaXMuX2NvcmUuc2V0dGluZ3MuZG90c0RhdGEmJnRoaXMuX3RlbXBsYXRlcy5wdXNoKHQoZS5jb250ZW50KS5maW5kKFwiW2RhdGEtZG90XVwiKS5hbmRTZWxmKFwiW2RhdGEtZG90XVwiKS5hdHRyKFwiZGF0YS1kb3RcIikpfSx0aGlzKSxcImFkZC5vd2wuY2Fyb3VzZWxcIjp0LnByb3h5KGZ1bmN0aW9uKGUpe3RoaXMuX2NvcmUuc2V0dGluZ3MuZG90c0RhdGEmJnRoaXMuX3RlbXBsYXRlcy5zcGxpY2UoZS5wb3NpdGlvbiwwLHQoZS5jb250ZW50KS5maW5kKFwiW2RhdGEtZG90XVwiKS5hbmRTZWxmKFwiW2RhdGEtZG90XVwiKS5hdHRyKFwiZGF0YS1kb3RcIikpfSx0aGlzKSxcInJlbW92ZS5vd2wuY2Fyb3VzZWwgcHJlcGFyZWQub3dsLmNhcm91c2VsXCI6dC5wcm94eShmdW5jdGlvbih0KXt0aGlzLl9jb3JlLnNldHRpbmdzLmRvdHNEYXRhJiZ0aGlzLl90ZW1wbGF0ZXMuc3BsaWNlKHQucG9zaXRpb24sMSl9LHRoaXMpLFwiY2hhbmdlLm93bC5jYXJvdXNlbFwiOnQucHJveHkoZnVuY3Rpb24odCl7aWYoXCJwb3NpdGlvblwiPT10LnByb3BlcnR5Lm5hbWUmJiF0aGlzLl9jb3JlLnN0YXRlLnJldmVydCYmIXRoaXMuX2NvcmUuc2V0dGluZ3MubG9vcCYmdGhpcy5fY29yZS5zZXR0aW5ncy5uYXZSZXdpbmQpe3ZhciBlPXRoaXMuX2NvcmUuY3VycmVudCgpLGk9dGhpcy5fY29yZS5tYXhpbXVtKCkscz10aGlzLl9jb3JlLm1pbmltdW0oKTt0LmRhdGE9dC5wcm9wZXJ0eS52YWx1ZT5pP2U+PWk/czppOnQucHJvcGVydHkudmFsdWU8cz9pOnQucHJvcGVydHkudmFsdWV9fSx0aGlzKSxcImNoYW5nZWQub3dsLmNhcm91c2VsXCI6dC5wcm94eShmdW5jdGlvbih0KXtcInBvc2l0aW9uXCI9PXQucHJvcGVydHkubmFtZSYmdGhpcy5kcmF3KCl9LHRoaXMpLFwicmVmcmVzaGVkLm93bC5jYXJvdXNlbFwiOnQucHJveHkoZnVuY3Rpb24oKXt0aGlzLl9pbml0aWFsaXplZHx8KHRoaXMuaW5pdGlhbGl6ZSgpLHRoaXMuX2luaXRpYWxpemVkPSEwKSx0aGlzLl9jb3JlLnRyaWdnZXIoXCJyZWZyZXNoXCIsbnVsbCxcIm5hdmlnYXRpb25cIiksdGhpcy51cGRhdGUoKSx0aGlzLmRyYXcoKSx0aGlzLl9jb3JlLnRyaWdnZXIoXCJyZWZyZXNoZWRcIixudWxsLFwibmF2aWdhdGlvblwiKX0sdGhpcyl9LHRoaXMuX2NvcmUub3B0aW9ucz10LmV4dGVuZCh7fSxuLkRlZmF1bHRzLHRoaXMuX2NvcmUub3B0aW9ucyksdGhpcy4kZWxlbWVudC5vbih0aGlzLl9oYW5kbGVycyl9O24uRGVmYXVsdHM9e25hdjohMSxuYXZSZXdpbmQ6ITAsbmF2VGV4dDpbXCI8c3Bhbj48L3NwYW4+XCIsXCI8c3Bhbj48L3NwYW4+XCJdLG5hdlNwZWVkOiExLG5hdkVsZW1lbnQ6XCJkaXZcIixuYXZDb250YWluZXI6ITEsbmF2Q29udGFpbmVyQ2xhc3M6XCJvd2wtbmF2XCIsbmF2Q2xhc3M6W1wib3dsLXByZXZcIixcIm93bC1uZXh0XCJdLHNsaWRlQnk6MSxkb3RDbGFzczpcIm93bC1kb3RcIixkb3RzQ2xhc3M6XCJvd2wtZG90c1wiLGRvdHM6ITAsZG90c0VhY2g6ITEsZG90RGF0YTohMSxkb3RzU3BlZWQ6ITEsZG90c0NvbnRhaW5lcjohMSxjb250cm9sc0NsYXNzOlwib3dsLWNvbnRyb2xzXCJ9LG4ucHJvdG90eXBlLmluaXRpYWxpemU9ZnVuY3Rpb24oKXt2YXIgZSxpLHM9dGhpcy5fY29yZS5zZXR0aW5ncztzLmRvdHNEYXRhfHwodGhpcy5fdGVtcGxhdGVzPVt0KFwiPGRpdj5cIikuYWRkQ2xhc3Mocy5kb3RDbGFzcykuYXBwZW5kKHQoXCI8c3Bhbj5cIikpLnByb3AoXCJvdXRlckhUTUxcIildKSxzLm5hdkNvbnRhaW5lciYmcy5kb3RzQ29udGFpbmVyfHwodGhpcy5fY29udHJvbHMuJGNvbnRhaW5lcj10KFwiPGRpdj5cIikuYWRkQ2xhc3Mocy5jb250cm9sc0NsYXNzKS5hcHBlbmRUbyh0aGlzLiRlbGVtZW50KSksdGhpcy5fY29udHJvbHMuJGluZGljYXRvcnM9cy5kb3RzQ29udGFpbmVyP3Qocy5kb3RzQ29udGFpbmVyKTp0KFwiPGRpdj5cIikuaGlkZSgpLmFkZENsYXNzKHMuZG90c0NsYXNzKS5hcHBlbmRUbyh0aGlzLl9jb250cm9scy4kY29udGFpbmVyKSx0aGlzLl9jb250cm9scy4kaW5kaWNhdG9ycy5vbihcImNsaWNrXCIsXCJkaXZcIix0LnByb3h5KGZ1bmN0aW9uKGUpe3ZhciBpPXQoZS50YXJnZXQpLnBhcmVudCgpLmlzKHRoaXMuX2NvbnRyb2xzLiRpbmRpY2F0b3JzKT90KGUudGFyZ2V0KS5pbmRleCgpOnQoZS50YXJnZXQpLnBhcmVudCgpLmluZGV4KCk7ZS5wcmV2ZW50RGVmYXVsdCgpLHRoaXMudG8oaSxzLmRvdHNTcGVlZCl9LHRoaXMpKSxlPXMubmF2Q29udGFpbmVyP3Qocy5uYXZDb250YWluZXIpOnQoXCI8ZGl2PlwiKS5hZGRDbGFzcyhzLm5hdkNvbnRhaW5lckNsYXNzKS5wcmVwZW5kVG8odGhpcy5fY29udHJvbHMuJGNvbnRhaW5lciksdGhpcy5fY29udHJvbHMuJG5leHQ9dChcIjxcIitzLm5hdkVsZW1lbnQrXCI+XCIpLHRoaXMuX2NvbnRyb2xzLiRwcmV2aW91cz10aGlzLl9jb250cm9scy4kbmV4dC5jbG9uZSgpLHRoaXMuX2NvbnRyb2xzLiRwcmV2aW91cy5hZGRDbGFzcyhzLm5hdkNsYXNzWzBdKS5odG1sKHMubmF2VGV4dFswXSkuaGlkZSgpLnByZXBlbmRUbyhlKS5vbihcImNsaWNrXCIsdC5wcm94eShmdW5jdGlvbih0KXt0aGlzLnByZXYocy5uYXZTcGVlZCl9LHRoaXMpKSx0aGlzLl9jb250cm9scy4kbmV4dC5hZGRDbGFzcyhzLm5hdkNsYXNzWzFdKS5odG1sKHMubmF2VGV4dFsxXSkuaGlkZSgpLmFwcGVuZFRvKGUpLm9uKFwiY2xpY2tcIix0LnByb3h5KGZ1bmN0aW9uKHQpe3RoaXMubmV4dChzLm5hdlNwZWVkKX0sdGhpcykpO2ZvcihpIGluIHRoaXMuX292ZXJyaWRlcyl0aGlzLl9jb3JlW2ldPXQucHJveHkodGhpc1tpXSx0aGlzKX0sbi5wcm90b3R5cGUuZGVzdHJveT1mdW5jdGlvbigpe3ZhciB0LGUsaSxzO2Zvcih0IGluIHRoaXMuX2hhbmRsZXJzKXRoaXMuJGVsZW1lbnQub2ZmKHQsdGhpcy5faGFuZGxlcnNbdF0pO2ZvcihlIGluIHRoaXMuX2NvbnRyb2xzKXRoaXMuX2NvbnRyb2xzW2VdLnJlbW92ZSgpO2ZvcihzIGluIHRoaXMub3ZlcmlkZXMpdGhpcy5fY29yZVtzXT10aGlzLl9vdmVycmlkZXNbc107Zm9yKGkgaW4gT2JqZWN0LmdldE93blByb3BlcnR5TmFtZXModGhpcykpXCJmdW5jdGlvblwiIT10eXBlb2YgdGhpc1tpXSYmKHRoaXNbaV09bnVsbCl9LG4ucHJvdG90eXBlLnVwZGF0ZT1mdW5jdGlvbigpe3ZhciB0LGUsaSxzPXRoaXMuX2NvcmUuc2V0dGluZ3Msbj10aGlzLl9jb3JlLmNsb25lcygpLmxlbmd0aC8yLG89bit0aGlzLl9jb3JlLml0ZW1zKCkubGVuZ3RoLHI9cy5jZW50ZXJ8fHMuYXV0b1dpZHRofHxzLmRvdERhdGE/MTpzLmRvdHNFYWNofHxzLml0ZW1zO2lmKFwicGFnZVwiIT09cy5zbGlkZUJ5JiYocy5zbGlkZUJ5PU1hdGgubWluKHMuc2xpZGVCeSxzLml0ZW1zKSkscy5kb3RzfHxcInBhZ2VcIj09cy5zbGlkZUJ5KWZvcih0aGlzLl9wYWdlcz1bXSx0PW4sZT0wLGk9MDtvPnQ7dCsrKShlPj1yfHwwPT09ZSkmJih0aGlzLl9wYWdlcy5wdXNoKHtzdGFydDp0LW4sZW5kOnQtbityLTF9KSxlPTAsKytpKSxlKz10aGlzLl9jb3JlLm1lcmdlcnModGhpcy5fY29yZS5yZWxhdGl2ZSh0KSl9LG4ucHJvdG90eXBlLmRyYXc9ZnVuY3Rpb24oKXt2YXIgZSxpLHM9XCJcIixuPXRoaXMuX2NvcmUuc2V0dGluZ3Msbz0odGhpcy5fY29yZS4kc3RhZ2UuY2hpbGRyZW4oKSx0aGlzLl9jb3JlLnJlbGF0aXZlKHRoaXMuX2NvcmUuY3VycmVudCgpKSk7aWYoIW4ubmF2fHxuLmxvb3B8fG4ubmF2UmV3aW5kfHwodGhpcy5fY29udHJvbHMuJHByZXZpb3VzLnRvZ2dsZUNsYXNzKFwiZGlzYWJsZWRcIiwwPj1vKSx0aGlzLl9jb250cm9scy4kbmV4dC50b2dnbGVDbGFzcyhcImRpc2FibGVkXCIsbz49dGhpcy5fY29yZS5tYXhpbXVtKCkpKSx0aGlzLl9jb250cm9scy4kcHJldmlvdXMudG9nZ2xlKG4ubmF2KSx0aGlzLl9jb250cm9scy4kbmV4dC50b2dnbGUobi5uYXYpLG4uZG90cyl7aWYoZT10aGlzLl9wYWdlcy5sZW5ndGgtdGhpcy5fY29udHJvbHMuJGluZGljYXRvcnMuY2hpbGRyZW4oKS5sZW5ndGgsbi5kb3REYXRhJiYwIT09ZSl7Zm9yKGk9MDtpPHRoaXMuX2NvbnRyb2xzLiRpbmRpY2F0b3JzLmNoaWxkcmVuKCkubGVuZ3RoO2krKylzKz10aGlzLl90ZW1wbGF0ZXNbdGhpcy5fY29yZS5yZWxhdGl2ZShpKV07dGhpcy5fY29udHJvbHMuJGluZGljYXRvcnMuaHRtbChzKX1lbHNlIGU+MD8ocz1uZXcgQXJyYXkoZSsxKS5qb2luKHRoaXMuX3RlbXBsYXRlc1swXSksdGhpcy5fY29udHJvbHMuJGluZGljYXRvcnMuYXBwZW5kKHMpKTowPmUmJnRoaXMuX2NvbnRyb2xzLiRpbmRpY2F0b3JzLmNoaWxkcmVuKCkuc2xpY2UoZSkucmVtb3ZlKCk7dGhpcy5fY29udHJvbHMuJGluZGljYXRvcnMuZmluZChcIi5hY3RpdmVcIikucmVtb3ZlQ2xhc3MoXCJhY3RpdmVcIiksdGhpcy5fY29udHJvbHMuJGluZGljYXRvcnMuY2hpbGRyZW4oKS5lcSh0LmluQXJyYXkodGhpcy5jdXJyZW50KCksdGhpcy5fcGFnZXMpKS5hZGRDbGFzcyhcImFjdGl2ZVwiKX10aGlzLl9jb250cm9scy4kaW5kaWNhdG9ycy50b2dnbGUobi5kb3RzKX0sbi5wcm90b3R5cGUub25UcmlnZ2VyPWZ1bmN0aW9uKGUpe3ZhciBpPXRoaXMuX2NvcmUuc2V0dGluZ3M7ZS5wYWdlPXtpbmRleDp0LmluQXJyYXkodGhpcy5jdXJyZW50KCksdGhpcy5fcGFnZXMpLGNvdW50OnRoaXMuX3BhZ2VzLmxlbmd0aCxzaXplOmkmJihpLmNlbnRlcnx8aS5hdXRvV2lkdGh8fGkuZG90RGF0YT8xOmkuZG90c0VhY2h8fGkuaXRlbXMpfX0sbi5wcm90b3R5cGUuY3VycmVudD1mdW5jdGlvbigpe3ZhciBlPXRoaXMuX2NvcmUucmVsYXRpdmUodGhpcy5fY29yZS5jdXJyZW50KCkpO3JldHVybiB0LmdyZXAodGhpcy5fcGFnZXMsZnVuY3Rpb24odCl7cmV0dXJuIHQuc3RhcnQ8PWUmJnQuZW5kPj1lfSkucG9wKCl9LG4ucHJvdG90eXBlLmdldFBvc2l0aW9uPWZ1bmN0aW9uKGUpe3ZhciBpLHMsbj10aGlzLl9jb3JlLnNldHRpbmdzO3JldHVyblwicGFnZVwiPT1uLnNsaWRlQnk/KGk9dC5pbkFycmF5KHRoaXMuY3VycmVudCgpLHRoaXMuX3BhZ2VzKSxzPXRoaXMuX3BhZ2VzLmxlbmd0aCxlPysraTotLWksaT10aGlzLl9wYWdlc1soaSVzK3MpJXNdLnN0YXJ0KTooaT10aGlzLl9jb3JlLnJlbGF0aXZlKHRoaXMuX2NvcmUuY3VycmVudCgpKSxzPXRoaXMuX2NvcmUuaXRlbXMoKS5sZW5ndGgsZT9pKz1uLnNsaWRlQnk6aS09bi5zbGlkZUJ5KSxpfSxuLnByb3RvdHlwZS5uZXh0PWZ1bmN0aW9uKGUpe3QucHJveHkodGhpcy5fb3ZlcnJpZGVzLnRvLHRoaXMuX2NvcmUpKHRoaXMuZ2V0UG9zaXRpb24oITApLGUpfSxuLnByb3RvdHlwZS5wcmV2PWZ1bmN0aW9uKGUpe3QucHJveHkodGhpcy5fb3ZlcnJpZGVzLnRvLHRoaXMuX2NvcmUpKHRoaXMuZ2V0UG9zaXRpb24oITEpLGUpfSxuLnByb3RvdHlwZS50bz1mdW5jdGlvbihlLGkscyl7dmFyIG47cz90LnByb3h5KHRoaXMuX292ZXJyaWRlcy50byx0aGlzLl9jb3JlKShlLGkpOihuPXRoaXMuX3BhZ2VzLmxlbmd0aCx0LnByb3h5KHRoaXMuX292ZXJyaWRlcy50byx0aGlzLl9jb3JlKSh0aGlzLl9wYWdlc1soZSVuK24pJW5dLnN0YXJ0LGkpKX0sdC5mbi5vd2xDYXJvdXNlbC5Db25zdHJ1Y3Rvci5QbHVnaW5zLk5hdmlnYXRpb249bn0od2luZG93LlplcHRvfHx3aW5kb3cualF1ZXJ5LHdpbmRvdyxkb2N1bWVudCksZnVuY3Rpb24odCxlLGkscyl7XCJ1c2Ugc3RyaWN0XCI7dmFyIG49ZnVuY3Rpb24oaSl7dGhpcy5fY29yZT1pLHRoaXMuX2hhc2hlcz17fSx0aGlzLiRlbGVtZW50PXRoaXMuX2NvcmUuJGVsZW1lbnQsdGhpcy5faGFuZGxlcnM9e1wiaW5pdGlhbGl6ZWQub3dsLmNhcm91c2VsXCI6dC5wcm94eShmdW5jdGlvbigpe1wiVVJMSGFzaFwiPT10aGlzLl9jb3JlLnNldHRpbmdzLnN0YXJ0UG9zaXRpb24mJnQoZSkudHJpZ2dlcihcImhhc2hjaGFuZ2Uub3dsLm5hdmlnYXRpb25cIil9LHRoaXMpLFwicHJlcGFyZWQub3dsLmNhcm91c2VsXCI6dC5wcm94eShmdW5jdGlvbihlKXt2YXIgaT10KGUuY29udGVudCkuZmluZChcIltkYXRhLWhhc2hdXCIpLmFuZFNlbGYoXCJbZGF0YS1oYXNoXVwiKS5hdHRyKFwiZGF0YS1oYXNoXCIpO3RoaXMuX2hhc2hlc1tpXT1lLmNvbnRlbnR9LHRoaXMpfSx0aGlzLl9jb3JlLm9wdGlvbnM9dC5leHRlbmQoe30sbi5EZWZhdWx0cyx0aGlzLl9jb3JlLm9wdGlvbnMpLHRoaXMuJGVsZW1lbnQub24odGhpcy5faGFuZGxlcnMpLHQoZSkub24oXCJoYXNoY2hhbmdlLm93bC5uYXZpZ2F0aW9uXCIsdC5wcm94eShmdW5jdGlvbigpe3ZhciB0PWUubG9jYXRpb24uaGFzaC5zdWJzdHJpbmcoMSksaT10aGlzLl9jb3JlLiRzdGFnZS5jaGlsZHJlbigpLHM9dGhpcy5faGFzaGVzW3RdJiZpLmluZGV4KHRoaXMuX2hhc2hlc1t0XSl8fDA7cmV0dXJuIHQ/dm9pZCB0aGlzLl9jb3JlLnRvKHMsITEsITApOiExfSx0aGlzKSl9O24uRGVmYXVsdHM9e1VSTGhhc2hMaXN0ZW5lcjohMX0sbi5wcm90b3R5cGUuZGVzdHJveT1mdW5jdGlvbigpe3ZhciBpLHM7dChlKS5vZmYoXCJoYXNoY2hhbmdlLm93bC5uYXZpZ2F0aW9uXCIpO2ZvcihpIGluIHRoaXMuX2hhbmRsZXJzKXRoaXMuX2NvcmUuJGVsZW1lbnQub2ZmKGksdGhpcy5faGFuZGxlcnNbaV0pO2ZvcihzIGluIE9iamVjdC5nZXRPd25Qcm9wZXJ0eU5hbWVzKHRoaXMpKVwiZnVuY3Rpb25cIiE9dHlwZW9mIHRoaXNbc10mJih0aGlzW3NdPW51bGwpfSx0LmZuLm93bENhcm91c2VsLkNvbnN0cnVjdG9yLlBsdWdpbnMuSGFzaD1ufSh3aW5kb3cuWmVwdG98fHdpbmRvdy5qUXVlcnksd2luZG93LGRvY3VtZW50KTsiXSwic291cmNlUm9vdCI6IiJ9